module
    import 
        as React
        from 'react'
    import 
        @ StyleSheet
        @ css
        from 'aphrodite'
    import 
        @ Form
        @ withStatus
        @ withValidation
        from '../../features/form'
    import 
        @ packiDefaults
        from '../../features/packi'
    import Button from '../shared/Button'
    import ModalDialog from '../shared/ModalDialog'
    import LargeInput from '../shared/LargeInput'
    import LargeTextArea from '../shared/LargeTextArea'
    import colors from '../../configs/colors'
    :type Props
        :{ 
            :p visible
                :boolean 
            :p title
                :string 
            :p action
                :string 
            :p onSubmit
                :=> 
                    :void 
                    param details
                        :{ 
                            :p name
                                :string 
                            :p description
                                :string 
            :p onDismiss
                :=> 
                    :void 
            :p description
                :union 
                    :string 
                    :undefined 
            :p name
                :string 
            :p isWorking
                :optional 
                :boolean 
    :type State
        :{ 
            :p name
                :string 
            :p description
                :string 
            :p visible
                :boolean 
    # @ts-ignore
    const FormButton = withStatus(Button)
    # @ts-ignore
    const ValidatedInput = withValidation(LargeInput)
    export-default 
        class ModalEditTitleAndDescription
            super React.Component
                :param 
                    :ref Props
                :param 
                    :ref State
            m getDerivedStateFromProps
                static
                param props
                    :ref Props
                param state
                    :ref State
                if state.visible !== props.visible
                    if props.visible
                        return 
                            { 
                                @ name props.name || ''
                                @ description props.description || ''
                                @ visible props.visible
                    else
                        return 
                            { 
                                @ visible props.visible
                return null
            p state
                { 
                    @ name this.props.name || ''
                    @ description this.props.description || ''
                    @ visible this.props.visible
            => _handleSubmit
                _ this.props.onSubmit
                    { 
                        @ name this.state.name
                        @ description this.state.description
            => _validateName
                param name
                    :string 
                iif name
                    then
                        iif /^[a-z_\-\d\s]+$/i.test(name)
                            then null
                            else new Error('Name can only contain letters, numbers, space, hyphen (-) and underscore (_).')
                    else new Error('Name cannot be empty.')
            m render
                const 
                    { 
                        @ visible
                        @ title
                        @ onDismiss
                        @ isWorking
                        @ action
                    = this.props
                return 
                    < ModalDialog 
                        @ visible {visible}
                        @ title {title}
                        @ onDismiss {onDismiss}
                        < Form 
                            @ onSubmit {this._handleSubmit}
                            h4 
                                @ className {css(styles.subtitle)}
                                + Package name
                            < ValidatedInput 
                                @ autoFocus
                                @ value {this.state.name}
                                @ onChange
                                    => 
                                        param e
                                            :ref React.ChangeEvent
                                                :param 
                                                    :ref HTMLInputElement
                                        _ this.setState
                                            { 
                                                @ name e.target.value
                                @ placeholder {'Unnamed Packi'}
                                @ validate {this._validateName}
                            h4 
                                @ className {css(styles.subtitle)}
                                + Description
                            < LargeTextArea 
                                @ value {this.state.description}
                                @ onChange
                                    => 
                                        param e
                                        _ this.setState
                                            { 
                                                @ description e.target.value
                                @ minRows {4}
                                @ placeholder {packiDefaults.DEFAULT_DESCRIPTION}
                            div 
                                @ className {css(styles.buttons)}
                                < FormButton 
                                    @ type "submit"
                                    @ large
                                    @ variant "secondary"
                                    @ loading {isWorking}
                                    + {action}
    const styles
        _ StyleSheet.create
            { 
                { subtitle
                    @ fontSize 16
                    @ fontWeight 500
                    @ padding 0
                    @ lineHeight '22px'
                    @ margin '16px 0 6px 0'
                { buttons
                    @ margin '20px 0 0 0'
                { caption
                    @ marginTop 24
                    @ fontSize '16px'
                    @ lineHeight '22px'
                    @ textAlign 'center'
                { link
                    @ cursor 'pointer'
                    @ color colors.primary
                    @ textDecoration 'underline'

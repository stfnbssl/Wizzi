module
    import 
        as React
        from 'react'
    import 
        @ StyleSheet
        @ css
        from 'aphrodite'
    import CollapsibleObject from '../shared/CollapsibleObject'
    import colors from '../../configs/colors'
    :type Device
        :{ 
            :p name
                :string 
            :p id
                :string 
            :p platform
                :string 
    :type DeviceLog
        :{ 
            :p device
                :ref Device
            :p method
                :union 
                    :literal 'log'
                    :literal 'error'
                    :literal 'warn'
            :p payload
                :[ 
                    :any 
    :type GroupedLog
        :{ 
            :p items
                :[ 
                    :ref DeviceLog
            :p device
                :string 
            :p method
                :union 
                    :literal 'log'
                    :literal 'error'
                    :literal 'warn'
            :p times
                :literal 1
    :type Props
        :{ 
            :p deviceLogs
                :[ 
                    :ref DeviceLog
    export-default 
        function EditorPanelLogs
            { 
                @ deviceLogs
                :ref Props
            const logs
                _ deviceLogs.reduce
                    => 
                        param acc
                            :[ 
                                :ref GroupedLog
                        param log
                        const last = acc[acc.length - 1]
                        const items
                            _ log.payload.map
                                => 
                                    param text
                                    try 
                                        return JSON.parse(text)
                                    catch e
                                        return text
                        # If the last log and current are the same, increment the count
                        if last && last.items.length === 1 && last.items[0] === items[0] && last.device === log.device.name && last.method === log.method
                            set last.times++
                        else
                            _ acc.push
                                { 
                                    @ items
                                    @ device log.device.name
                                    @ method log.method
                                    @ times 1
                        return acc
                    [ 
            return 
                div 
                    { 
                        _ logs.map
                            => 
                                { 
                                    @ items
                                    @ device
                                    @ method
                                    @ times
                                    :ref GroupedLog
                                param i
                                return 
                                    div 
                                        @ className {css(styles.container)}
                                        @ key {i}
                                        div 
                                            @ className {css(styles.device)}
                                            + {device}
                                            + :
                                        div 
                                            @ className {css(styles.line)}
                                            @ key {i}
                                            { 
                                                _ items.map
                                                    => 
                                                        param item
                                                        param i
                                                        iif typeof item === 'object' && item !== null
                                                            then
                                                                < CollapsibleObject 
                                                                    @ key {i}
                                                                    @ object {item}
                                                            else
                                                                div 
                                                                    @ key {i}
                                                                    @ className {css(styles.item, method === 'error' && styles.error, method === 'warn' && styles.warning)}
                                                                    + {String(item)}
                                            { 
                                                iif times > 1
                                                    then
                                                        div 
                                                            @ className {css(styles.counter)}
                                                            + {times}
                                                    else null
    const styles
        _ StyleSheet.create
            { 
                { container
                    @ display 'flex'
                    @ flexDirection 'row'
                    @ flexWrap 'nowrap'
                    @ fontFamily 'var(--font-monospace)'
                    @ fontSize 13
                    @ minHeight 16
                    @ margin '4px 0'
                { line
                    @ display 'flex'
                    @ flexDirection 'row'
                    @ flexWrap 'wrap'
                { item
                    @ marginRight 8
                { error
                    @ color colors.error
                { warning
                    @ color colors.warning
                { device
                    @ opacity 0.5
                    @ marginRight 8
                { counter
                    @ position 'relative'
                    @ bottom -1
                    @ height 16
                    @ width 16
                    @ lineHeight '16px'
                    @ fontSize 12
                    @ textAlign 'center'
                    @ borderRadius '50%'
                    @ backgroundColor colors.primary
                    @ color 'white'
                    @ opacity 0.5

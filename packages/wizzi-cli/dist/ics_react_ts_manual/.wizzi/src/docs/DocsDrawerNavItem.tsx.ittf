module
    import React from 'react'
    import PropTypes from 'prop-types'
    import clsx from 'classnames'
    import 
        @ withStyles
        @ createStyles
        @ Theme
        from '@material-ui/core/styles'
    import ListItem from '@material-ui/core/ListItem'
    import Button from '@material-ui/core/Button'
    import Collapse from '@material-ui/core/Collapse'
    import 
        @ Link
        from 'react-router-dom'
    function createLink
        param href
            :string 
        return 
            < Link 
                @ to {href}
                @ {...props}
    :type Props
        :{ 
            :p classes
                :any 
            :p children
                :optional 
                :ref React.ReactNode
            :p depth
                :number 
            :p href
                :optional 
                :string 
            :p onClick
                :optional 
                :=> 
                    :void 
            :p openImmediately
                :optional 
                :boolean 
            :p title
                :string 
    :type State
        :{ 
            :p open
                :boolean 
    class DocsDrawerNavItem
        super React.Component
            :param 
                :ref Props
            :param 
                :ref State
        p state
            { 
                @ open this.props.openImmediately || false
        m componentDidMount
            # So we only run this logic once.
            if !this.props.openImmediately
                return 
            # Center the selected item in the list container.
            const activeElement
                _ document.querySelector
                    `lit 
                        + .
                        @ this.props.classes.active
                        + 
            if activeElement && activeElement.scrollIntoView
                _ activeElement.scrollIntoView
                    { 
        => handleClick
            _ console.log('DocsDrawerNavItem.handleClick', this.state)
            _ this.setState
                => 
                    param state
                    (
                        { 
                            @ open !state.open
        m render
            const 
                { 
                    @ children
                    @ classes
                    @ depth
                    @ href
                    @ onClick
                    @ openImmediately
                    @ title
                    ... other
                = this.props
            const style
                { 
                    @ paddingLeft 8 * (3 + 2 * depth)
            _ console.log('DocsDrawerNavItem.href.title', href, title)
            if href
                const DocLink
                    => 
                        param props
                        < Link 
                            @ to {href}
                            @ {...props}
                return 
                    < ListItem 
                        @ className {classes.itemLeaf}
                        @ disableGutters
                        @ {...other}
                        < Button 
                            @ component {DocLink}
                            @ className
                                _ clsx
                                    @ classes.buttonLeaf
                                    `lit 
                                        + depth-
                                        @ depth
                                        + 
                            @ disableRipple
                            @ onClick {onClick}
                            @ style {style}
                            + {title}
            return 
                < ListItem 
                    @ className {classes.item}
                    @ disableGutters
                    @ {...other}
                    < Button 
                        @ classes
                            { 
                                @ root classes.button
                                @ label
                                    iif openImmediately
                                        then 'algolia-lvl0'
                                        else ''
                        @ onClick {this.handleClick}
                        @ style {style}
                        + {title}
                    < Collapse 
                        @ in {this.state.open}
                        @ timeout "auto"
                        @ unmountOnExit
                        + {children}
    const muiStyles
        => 
            param theme
                :ref Theme
            _ createStyles
                { 
                    { item
                        @ display 'block'
                        @ paddingTop 0
                        @ paddingBottom 0
                    { itemLeaf
                        @ display 'flex'
                        @ paddingTop 0
                        @ paddingBottom 0
                    { button
                        @ letterSpacing 0
                        @ justifyContent 'flex-start'
                        @ textTransform 'none'
                        @ width '100%'
                    { buttonLeaf
                        @ letterSpacing 0
                        @ justifyContent 'flex-start'
                        @ textTransform 'none'
                        @ width '100%'
                        @ fontWeight theme.typography.fontWeightRegular
                        { '&.depth-0'
                            @ fontWeight theme.typography.fontWeightMedium
                    { active
                        @ color theme.palette.primary.main
                        @ fontWeight theme.typography.fontWeightMedium
    export-default withStyles(muiStyles)(DocsDrawerNavItem)

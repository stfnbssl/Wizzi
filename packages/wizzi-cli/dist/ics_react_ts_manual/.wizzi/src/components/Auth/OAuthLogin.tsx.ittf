module
    import React
        @ Component
        from 'react'
    import 
        @ withStyles
        @ createStyles
        @ Theme
        from '@material-ui/core/styles'
    import Typography from '@material-ui/core/Typography'
    import Fab from '@material-ui/core/Fab'
    import Card from '@material-ui/core/Card'
    import CardActionArea from '@material-ui/core/CardActionArea'
    import CardActions from '@material-ui/core/CardActions'
    import CardContent from '@material-ui/core/CardContent'
    import CardMedia from '@material-ui/core/CardMedia'
    import FontAwesome from 'react-fontawesome'
    import 
        @ config
        from '../../features/config'
    import 
        @ appTypes
        from '../../features/app'
    import 
        @ authTypes
        from '../../features/auth'
    :type Props
        :intersect 
            :ref authTypes.AuthProps
            :{ 
                :p classes
                    :any 
                :p provider
                    :string 
                :p socket
                    :any 
    :type State
        :{ 
            :p user
                :union 
                    :ref appTypes.LoggedUser
                    :undefined 
            :p disabled
                :string 
    class OAuthLogin
        super React.Component
            :param 
                :ref Props
            :param 
                :ref State
        p state
            :ref State
            { 
                @ user undefined
                @ disabled ''
        p popup
            :any 
        m componentDidMount
            const 
                { 
                    @ socket
                    @ provider
                    @ loggedUser
                = this.props
            if loggedUser
                _ this.setState
                    { 
                        @ user loggedUser
            _ console.log('components.auth.OAuthLogin.did-mount, socket.id, provider', socket.id, provider)
            _ socket.on
                @ provider
                => 
                    param user
                        :ref appTypes.LoggedUser
                    _ console.log('components.auth.OAuthLogin.socket.on, user', user)
                    if this.popup
                        _ this.popup.close
                    _ this.setState
                        { 
                            @ user
                    _ this.props.onLoggedOn(user)
        m checkPopup
            const check
                _ setInterval
                    => 
                        const 
                            { 
                                @ popup
                            = this
                        if !popup || popup.closed || popup.closed === undefined
                            _ clearInterval(check)
                            _ this.setState
                                { 
                                    @ disabled ''
                            set this.popup = null
                    @ 1000
        m openPopup
            const 
                { 
                    @ provider
                    @ socket
                = this.props
            const 
                decl width = 600
                decl height = 600
            const left = (window.innerWidth / 2) - (width / 2)
            const top = (window.innerHeight / 2) - (height / 2)
            const url
                `lit 
                    + 
                    @ config.AUTH_PROVIDERS_URL
                    + /
                    @ provider
                    + ?socketId=
                    @ socket.id
                    + 
            _ console.log('components.auth.OAuthLogin.socket.id, url', socket.id, url)
            return 
                _ window.open
                    @ url
                    @ ''
                    `lit 
                        + toolbar=no, location=no, directories=no, status=no, menubar=no,&nbsp;&lf;
                        + &nbsp;           scrollbars=no, resizable=no, copyhistory=no, width=
                        @ width
                        + ,&nbsp;&lf;
                        + &nbsp;           height=
                        @ height
                        + , top=
                        @ top
                        + , left=
                        @ left
                        + 
        => startAuth
            if !this.state.disabled
                set this.popup = this.openPopup()
                _ this.checkPopup
                _ this.setState
                    { 
                        @ disabled 'disabled'
        => closeCard
            _ this.setState
                { 
                    @ user undefined
            _ this.props.onLoggedOff
        m render
            const 
                { 
                    @ provider
                    @ classes
                = this.props
            const username = this.state.user && this.state.user.username
            const displayName = this.state.user && this.state.user.displayName
            const picture = this.state.user && this.state.user.picture
            const 
                { 
                    @ disabled
                = this.state
            const atSymbol
                iif provider === 'twitter'
                    then '@'
                    else ''
            return 
                div 
                    { 
                        iif username
                            then
                                < Card 
                                    @ className {classes.card}
                                    < CardActionArea 
                                        < CardMedia 
                                            @ className {classes.media}
                                            @ image {picture}
                                            @ title {displayName}
                                        < CardContent 
                                            < Typography 
                                                @ gutterBottom
                                                @ variant "h5"
                                                @ component "h2"
                                                + {displayName}
                                            < Typography 
                                                @ variant "body1"
                                                + {JSON.stringify(this.state.user, null, 2)}
                                    < CardActions 
                                        < Fab 
                                            @ variant "extended"
                                            @ onClick {this.closeCard}
                                            + Logoff
                            else
                                div 
                                    { 
                                        # 
                                            # <div className={classes.card}>
                                            # <img src={picture} alt={displayName}></img>
                                            # <div className={classes.displayFlex}>
                                            # <div>
                                            # <h4>
                                            # {
                                            # `${atSymbol}${displayName}`
                                            # }
                                            # </h4>
                                            # </div>
                                            # <div>
                                            # <Button variant="extendedFab" onClick={this.closeCard}>Logoff</Button>
                                            # </div>
                                            # </div>
                                            # </div>
                                    div 
                                        @ className
                                            `lit 
                                                + 
                                                @ classes.btnWrapper
                                                + &nbsp;fadein-fast
                                        button 
                                            @ onClick {this.startAuth}
                                            @ className
                                                `lit 
                                                    + 
                                                    @ classes.btn
                                                    + &nbsp;
                                                    @ provider
                                                    + &nbsp;
                                                    @ disabled
                                                    + 
                                            < FontAwesome 
                                                @ name {provider}
    const muiStyles
        => 
            param theme
                :ref Theme
            _ createStyles
                { 
                    { 'btn'
                        @ background 'none'
                        @ color 'inherit'
                        @ border 'none'
                        @ padding '0'
                        @ font 'inherit'
                        @ cursor 'pointer'
                        @ outline 'inherit'
                        @ marginBottom '20px'
                        @ borderRadius '50%'
                        @ width '215px'
                        @ height '215px'
                        @ boxShadow '1px 2px 2px rgba(0, 0, 0, 0.25)'
                        @ transitionTimingFunction 'ease-in'
                        @ transition '0.3s'
                        @ transform 'scale(0.7)'
                        { '&:hover'
                            @ boxShadow '2px 5px 5px rgba(0, 0, 0, 0.5)'
                        { '&.disabled'
                            @ backgroundColor '#999 !important'
                            @ cursor 'no-drop'
                        { '&.disabled:hover'
                            @ boxShadow '1px 2px 2px rgba(0, 0, 0, 0.25)'
                        { '&.disabled:hover span'
                            @ textShadow '1px 2px 2px rgba(0, 0, 0, 0.25)'
                        { '& span'
                            @ fontSize '10em !important'
                            @ textShadow '1px 2px 2px rgba(0, 0, 0, 0.25)'
                            @ transition '0.3s'
                            @ color '#fff'
                        { '&:hover span'
                            @ textShadow '2px 5px 5px rgba(0, 0, 0, 0.5)'
                            @ transform 'rotate(-1.1deg)'
                        { '&.github'
                            @ border '3px solid #ffffff'
                            @ background '#767676'
                        { '&.github:hover'
                            @ background '#6e5494'
                        { '&.twitter'
                            @ border '3px solid #ffffff'
                            @ background '#433e90'
                        { '&.twitter:hover'
                            @ background '#326ada'
                        { '&.google'
                            @ border '3px solid #ffffff'
                            @ background '#0057e7'
                        { '&.google:hover'
                            @ background '#008744'
                        { '&.facebook'
                            @ border '3px solid #ffffff'
                            @ background '#8b9dc3'
                        { '&.facebook:hover'
                            @ background '#3b5998'
                    { 'btnWrapper'
                        @ height '300px'
                    { '__old_card'
                        @ backgroundColor '#FFF'
                        @ borderRadius '3%'
                        @ boxShadow '0px 4px 4px rgba(0, 0, 0, 0.25)'
                        @ wordWrap 'break-word'
                        @ width '215px'
                        @ height '100%'
                        @ marginBottom '20px'
                        @ transition '.5s'
                    { 'close'
                        @ borderRadius '50%'
                        @ textShadow '0px 1px 1px rgba(0, 0, 0, 0.25)'
                        @ float 'right'
                        @ top '-228px'
                        @ right '-6px'
                        @ fontSize '2em'
                        @ position 'relative'
                        @ color '#fff'
                        @ transition '.5s'
                    { '&:hover'
                        @ cursor 'pointer'
                        @ boxShadow '0px 2px 2px rgba(0, 0, 0, 0.25)'
                    { card
                        @ maxWidth 345
                    { media
                        @ height 340
                        @ width 340
                    { displayFlex
                        @ display 'flex'
                        @ justifyContent 'space-between'
                        @ alignItems 'center'
    export-default withStyles(muiStyles)(OAuthLogin)

module
    import 
        as React
        from 'react'
    import classnames from 'classnames'
    import 
        @ StyleSheet
        @ css
        from 'aphrodite'
    import colors from '../../configs/colors'
    :type Props
        :{ 
            :p type
                :optional 
                :union 
                    :literal 'info'
                    :literal 'success'
                    :literal 'error'
            :p visible
                :boolean 
            :p children
                :optional 
                :ref React.ReactNode
            :p className
                :optional 
                :string 
    :type State
        :{ 
            :p rendered
                :boolean 
    export-default 
        class Banner
            super React.PureComponent
                :param 
                    :ref Props
                :param 
                    :ref State
            m getDerivedStateFromProps
                static
                param props
                    :ref Props
                if props.visible
                    return 
                        { 
                            @ rendered true
                return null
            p state
                { 
                    @ rendered this.props.visible
            m componentDidUpdate
                param prevProps
                    :ref Props
                if this.props.visible !== prevProps.visible
                    _ clearTimeout(this._timer)
                    if !this.props.visible
                        set this._timer =
                            _ setTimeout
                                => 
                                    _ this.setState
                                        { 
                                            @ rendered false
                                @ 300
            p _timer
                :any 
            m render
                if !this.state.rendered
                    return null
                return 
                    div 
                        @ className {css(styles.container)}
                        div 
                            @ className
                                _ classnames
                                    @expr this.props.className
                                    _ css
                                        @expr styles.banner
                                        iif this.props.visible
                                            then styles.visible
                                            else styles.hidden
                                        @expr this.props.type === 'success' && styles.success
                                        @expr this.props.type === 'error' && styles.error
                            + {this.props.children}
    const styles
        _ StyleSheet.create
            { 
                { container
                    @ position 'fixed'
                    @ top 0
                    @ left 0
                    @ right 0
                    @ padding '0 10px'
                    @ zIndex 999
                    @ textAlign 'center'
                    @ pointerEvents 'none'
                { banner
                    @ display 'inline-block'
                    @ margin 'auto'
                    @ padding '1em'
                    @ maxWidth '100%'
                    @ backgroundColor colors.primary
                    @ color '#fff'
                    @ borderRadius '0 0 4px 4px'
                    @ transitionDuration '200ms'
                    @ pointerEvents 'all'
                { visible
                    @ transform 'translateY(0)'
                    @ pointerEvents 'auto'
                { hidden
                    @ transform 'translateY(-100%)'
                    @ pointerEvents 'none'
                { success
                    @ backgroundColor colors.success
                { error
                    @ backgroundColor colors.error

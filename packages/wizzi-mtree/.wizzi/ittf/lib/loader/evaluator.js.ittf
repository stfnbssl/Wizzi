module wizzi-mtree@${wfpackage.version}.loader.evaluator
    kind es6
    
    var jsWizziRunner = require('../jswizzi/jsWizziRunner')
    var JsWizziContext = require('../jswizzi/jsWizziContext')
    var dateUtil = require('../jswizzi/functions/dateutil')
	var JsWizziScriptCoder = require('../jswizzi/JsWizziScriptCoder')
    var mTreeBuildUpScripter = require('./mTreeBuildUpScripter')
	var requireFromString = null
    
	#
		# The final step of an mTree loading. 
		# Executes the expression evaluations and the
		# template commands of the composedMTree and builds the final mTree: 
		# . creates the mTreeBuildUpScript from the composedMTree,
		# . creates the jsWizziContext and loads the loadContext.mTreeBuildUpContext
		#   in the global context,
		# . runs the script with the jsWizziRunner,
		# . returns the builded mTree.
		#
		# params
		#   { composedMTree
		#   { loadContext
		#     { mTreeBuildUpContext
		#     { productionContext
		#       { runnerServer
        #     { options
        #       boolean isCompile
		#   callback
		#
	set module.exports =
        function 
            param composedMTree
            param loadContext
			param callback
            
			set loadContext.options = loadContext.options || {}
            var isCompile = loadContext.options.isCompile

            var productionContext = loadContext.productionContext
            var scriptCoder
                new JsWizziScriptCoder()

			var jsWizziContext
                new JsWizziContext(composedMTree, productionContext, scriptCoder)
			_ jsWizziContext.setGlobalValues
                @ loadContext.mTreeBuildUpContext
            
			var ctx
                { 
                    @ brickKey null
                    @ counter 0
                    @ startTime dateUtil.now_GMYHMS()
					@ isCompile isCompile
            
			# log 'isCompile', isCompile
			
			_ scriptCoder.w
				@ '// ' + ctx.startTime + '  by ' + __filename
			
			if isCompile
				_ scriptCoder.w
					@ 'module.exports = function($, $ctx) {'
				_ scriptCoder.indent
				foreach k in Object.keys(jsWizziContext.getIsCompileGlobals())
					_ scriptCoder.w
						@ 'var ' + k + ' = $ctx.' + k + ';'

			_ scriptCoder.w
				@ '$.n(); // set the context state to NodeContext'
			_ scriptCoder.w
				@ 'var $0 = {}; // the root node of the MTree buildup'
            
			foreach item in composedMTree.nodes
                _ mTreeBuildUpScripter.codify(item, 0, scriptCoder, ctx)
            
			if isCompile
				_ scriptCoder.w
					@ 'return $0;'
				_ scriptCoder.deindent
				_ scriptCoder.w
					@ '}'
			
			_ productionContext.addMTreeBuildUpScript
                @ composedMTree.uri
                @ scriptCoder

			if isCompile

				# log 'scriptCoder.toCode()', scriptCoder.toCode()
				
				if requireFromString === null
					set requireFromString = require('./requireFromString')
				
				var md
					_ requireFromString
						_ scriptCoder.toCode
				
				var $0
					_ md
						_ jsWizziContext.getValue('$')
						_ jsWizziContext.getGlobalValues
				
				_ finalize
					@ composedMTree
					@ $0
					@ ctx
					@ callback

			else

				_ jsWizziRunner.run
					_ scriptCoder.toCode()
					@ jsWizziContext
					{
					f_cb_no_throw( result )
                        if err
                            # set err.scriptCode = scriptCoder.toCode()
							return
								_ callback
                                    @ err
            
						_ jsWizziContext.set_NodeContext()

						var $0 = jsWizziContext.getValue('$0')
            
						if typeof($0) === 'undefined' || $0 == null || $0.children === 'undefined'
							return
								_ callback
                                    _ local_error
                                        @ 'IttfEvaluationError'
                                        @ 'evaluator'
                                        @ 'No node returned after IttfEvaluation'
                                        @ composedMTree.nodes[0]
                                        @ null
						_ finalize
							@ composedMTree
							@ $0
							@ ctx
							@ callback
            
	function finalize
		param composedMTree
		param $0
		param ctx
		param callback

		set composedMTree.nodes = []
            
		foreach item in $0.children
			set item.parent = null
			_ composedMTree.nodes.push(item)
            
		set composedMTree.data =
			{ 
				@ createdAt ctx.startTime
            
		_ callback(null, composedMTree)

    $include local_error

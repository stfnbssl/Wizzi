module
    $
        var ctrl = {
            name: 'ArtifactProduction',
            path: '/artifact',
        }
    
    controller( &ctrl )
            
        $append imports
            import ReactDOMServer 
                from 'react-dom/server'
            import PageFormDocument 
                from '../../../pages/PageFormDocument' 
            import
                @ CRUDResult
                from '../../types'
            import
                @ createArtifactProduction
                from '../api/artifact'
            +
            const myname = 'features/production/controllers/artifact'
            +
            function renderPageForm
                param req
                    :ref Request
                param res
                    :ref Response
                param data
                    :object
                param queryParams
                    :object

                const index
                    op+
                        + '<!DOCTYPE html>'
                        _ ReactDOMServer.renderToStaticMarkup
                            < PageFormDocument 
                                @ data {data}
                                @ queryParams {queryParams}
                _ res.set('Content-Type', 'text/html')
                _ res.set('Content-Length', index.length.toString())
                _ res.send(index)

            function getPackiFiles
                param mainIttf
                    :string
                return
                    {
                        { [mainIttf]
                            @ type 'CODE'
                            @ contents ''

        _ this.router.get('/new', this.getNewArtifactForm)
        _ this.router.post('/new', this.postNewArtifact)
        _ this.router.get('/update', this.getUpdateArtifactForm)
        _ this.router.post('/update', this.postUpdateArtifact)
        _ this.router.get('/delete', this.getDeleteArtifactForm)
        _ this.router.delete('/delete', this.deleteArtifact)
        
        $append handlers
            
            handler( getNewArtifactForm )
                log myname, 'getNewArtifactForm', JSON.stringify(request.query, null, 2)
                _ renderPageForm
                    @ request
                    @ response
                    {
                        @ type 'success'
                        @ formName 'CreateArtifactProduction'
                        { formData 
                            @ owner request.query.owner
                            @ name request.query.name
                            @ mainIttf request.query.mainIttf
                            @ schema request.query.schema
                    {

            handler( postNewArtifact )
                log myname + '.postNewArtifact.request.body', JSON.stringify(request.body, null, 2)
                log myname + '.postNewArtifact.request.session.user', JSON.stringify((request.session as any).user, null, 2)
                _ createArtifactProduction
                    @ (request.session as any).user.username
                    @ request.body.ap_name
                    @ request.body.ap_description
                    @ request.body.ap_main_ittf
                    @ request.body.ap_wizzi_schema
                    @ JSON.stringify(getPackiFiles(request.body.ap_main_ittf))
                    ._ then
                        =>
                            param result
                                :ref CRUDResult
                            log myname + '.postNewArtifact.createArtifactProduction.result', JSON.stringify(result, null, 2)
                            if result.ok
                                _ response.redirect('/productions/artifacts')
                            else
                                _ response.render
                                    @ 'error.html.ittf'
                                    {
                                        @ message 'creating a new artifact production'
                                        @ error result
                    ._ catch
                        =>
                            param err
                                :any
                            _ response.render
                                @ 'error.html.ittf'
                                {
                                    @ message 'creating a new artifact production'
                                    @ error err

            handler( getUpdateArtifactForm )
                # log myname + '.getUpdateArtifactForm', 
                _ renderPageForm
                    @ request
                    @ response
                    {
                        @ type 'success'
                        @ formName 'UpdateArtifact'
                        { formData 
                            @ website 'http://dummy.com'
                    {

            handler( postUpdateArtifact )
                # log myname + '.postUpdateArtifact', 

            handler( getDeleteArtifactForm )
                # log myname + '.getDeleteArtifactForm', 

            handler( deleteArtifact )
                # log myname + '.deleteArtifact', 

$group
    $params &md
    import
        @ Strategy
        from 'passport-local'
    import
        @ GetUserModel
        @ UserModelType
        from '../mongo/user'
    import
        @ config
        from '../../config'
    let userModel
        :ref UserModelType
    export
        function createStrategy
            set userModel = GetUserModel()
            _ console.log('features.auth.strategies.local.createStrategy')
            return
                new Strategy
                    {
                        @ usernameField 'user[email]'
                        @ passwordField 'user[password]'
                    =>
                        param email
                            :string
                        param password
                            :string
                        param done
                            :any
                        log 'features.auth.strategies.local.verify.email,password', email, password
                        _ userModel.findOne
                            {
                                @ email
                            ._ then
                                =>
                                    param user
                                        :any
                                    if !user || !user.validatePassword(password)
                                        log 'features.auth.strategies.local.verify.false'
                                        return
                                            _ done
                                                @ null
                                                @ false
                                                {
                                                    { errors
                                                        @ 'email or password' 'is invalid'
                                    _ console.log('features.auth.strategies.local.verify.true.user', user)
                                    return done(null, user)
                            ._ catch
                                @ done

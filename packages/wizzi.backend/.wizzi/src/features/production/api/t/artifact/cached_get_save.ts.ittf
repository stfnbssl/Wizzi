$group

    function mergePackiFiles
        param a
            :any
        param b
            :any
        var ret
            :any
            { 
        for var k in a
            set ret[k] = a[k]
        for var k in b
            set ret[k] = b[k]
        return ret

    $*
    +
    export
        async-function getArtifactProductionObject
            param owner
                :string
            param name
                :string
            var query
                { 
                    @ owner
                    @ name
            log 'getArtifactProductionObject', query
            return 
                new Promise
                    => 
                        param resolve
                        param reject
                        _ ArtifactProduction.find
                            @ query
                            function 
                                param err
                                param result
                                if err
                                    log 'getArtifactProductionObject', 'error', err
                                    return reject(err)
                                log 'getArtifactProductionObject.result.length', result.length
                                if result.length == 1
                                    const obj
                                        { 
                                            @ ...result[0]._doc
                                            @ packiFiles JSON.parse(result[0]._doc.packiFiles)
                                    return 
                                        _ resolve
                                            { 
                                                @ ...obj
                                                @ _id obj._id.toString()
                                return 
                                    _ reject
                                        { 
                                            @ message "packi item not found"
                                            @ query
    +
    export
        async-function getArtifactProductionObject_By_Id
            param id
            var query
                { 
                    @ _id id
            log 'getArtifactProductionObject_By_Id', query
            return 
                new Promise
                    => 
                        param resolve
                        param reject
                        _ ArtifactProduction.find
                            @ query
                            function 
                                param err
                                param result
                                if err
                                    log 'getArtifactProductionObject_By_Id.ArtifactProduction.find', 'error', err
                                    return reject(err)
                                log 'getArtifactProductionObject_By_Id.result.length', result.length
                                if result.length == 1
                                    return resolve(result[0]._doc)
                                return 
                                    _ reject
                                        { 
                                            @ message "artifact production not found"
                                            @ query

    *$

    +
    export
        async-function getArtifactProduction_withCache
            param owner
                :string
            param name
                :string
            var cacheKey = owner + '|' + name
            log 'getArtifactProduction_withCache.cacheKey', cacheKey
            return 
                new Promise
                    => 
                        param resolve
                        param reject
                        let apValue = artifactCache.get(cacheKey)
                        if apValue
                            return resolve(apValue)
                        _ getArtifactProduction
                            @ owner
                            @ name
                            ._ then
                                =>
                                    param result
                                    if !result.ok
                                        return reject(result)
                                    const ap
                                        :ref IArtifactProductionModel
                                        = result.item
                                    const ap_packiFiles_object
                                        :ref packiTypes.PackiFiles
                                        _ JSON.parse(ap.packiFiles)
                                    if ap.wizziSchema && ap.wizziSchema.length > 0
                                        log 'getArtifactProduction_withCache.getTFolder', owner, ap.wizziSchema
                                        _ tFolderApi.getTFolder
                                            @ owner
                                            @ ap.wizziSchema
                                            ._ then
                                                =>
                                                    param result
                                                    if !result.ok
                                                        set apValue =
                                                            { 
                                                                @ mainIttf ap.mainIttf
                                                                @ packiFiles ap_packiFiles_object
                                                        _ artifactCache.set(cacheKey, apValue)
                                                        return resolve(apValue)
                                                    const tf
                                                        :ref tFolderTypes.ITFolderModel
                                                        = result.item
                                                    const tf_packiFiles_object
                                                        :ref packiTypes.PackiFiles
                                                        _ JSON.parse(tf.packiFiles)
                                                    set apValue =
                                                        { 
                                                            @ mainIttf ap.mainIttf
                                                            @ packiFiles
                                                                _ mergePackiFiles
                                                                    @ ap_packiFiles_object
                                                                    @ tf_packiFiles_object
                                                    _ artifactCache.set(cacheKey, apValue)
                                                    return resolve(apValue)
                                            catch_reject( getArtifactProduction_withCache.getTFolder )
                                    else
                                        set apValue
                                            { 
                                                @ mainIttf ap.mainIttf
                                                @ packiFiles ap_packiFiles_object
                                        _ artifactCache.set(cacheKey, apValue)
                                        return resolve(apValue)
                            catch_reject( getArtifactProduction_withCache.getArtifactProduction )

    $*
    +
    export
        async-function saveArtifactProduction_withCache
            param owner
                :string
            param name
                :string
            param mainIttf
                :string
            param wizziSchema
                :string
            param packiFiles
                :string
            return 
                new Promise
                    => 
                        param resolve
                        param reject
                        const item
                            { 
                                @ owner
                                @ name
                                @ mainIttf
                                @ wizziSchema
                                @ packiFiles
                        set item.userUpdated = true
                        var cacheKey = owner + '|' + name
                        var query
                            { 
                                @ owner item.owner
                                @ name item.name
                        _ ArtifactProduction.findOneAndUpdate
                            @ query
                            @ item
                            { 
                                @ upsert true
                                @ new true
                            function 
                                param err
                                param doc
                                if err
                                    log 'saveArtifactProduction_withCache.ArtifactProduction.findOneAndUpdate.error', err
                                    return reject(err)
                                _ artifactCache.del(cacheKey)
                                log 'saveArtifactProductionCached.keys', Object.keys(doc), 'doc._doc', doc._doc
                                return 
                                    _ resolve
                                        { 
                                            @ upserted true
                                            @ message 'packiitem updated'
                                            @ doc doc._doc
    *$                                            
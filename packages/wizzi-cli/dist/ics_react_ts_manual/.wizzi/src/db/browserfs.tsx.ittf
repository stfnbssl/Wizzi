module
    import 
        as wizziUtils
        from 'wizzi-browser'
    import 
        @ VFile
        @ GetFoldersOptions
        @ GetFilesOptions
        @ FolderDef
        @ FileDef
        from 'wizzi-utils'
    import 
        @ config
        from '../features/config'
    :type cb
        :< T
        :=> 
            :void 
            param err
                :any 
            param result
                :ref T
                :optional 
    let fs
        :ref VFile
    async-function getFs
        :return
            :ref Promise
                :param 
                    :ref wizziUtils.VFile
        return 
            new Promise
                => 
                    param resolve
                    param reject
                    if typeof fs != 'undefined'
                        return resolve(fs)
                    _ wizziUtils.vfile
                        { 
                            @ storeName config.BROWSERFS_PACKI_STORE
                        => 
                            param err
                                :any 
                            param result
                            if err
                                return reject(err)
                            _ console.log('db.browserfs.initialized', result)
                            set fs = result
                            _ resolve(fs)
    export 
        class BrowserFileSystem
            ctor 
            m deleteFile
                async
                param filePath
                    :string 
                param callback
                    :ref cb
                        :param any
                const fs
                    await 
                        _ getFs
                _ fs.unlink(filePath, callback)
            m renameFolder
                async
                param oldPath
                    :string 
                param newPath
                    :string 
                param callback
                    :ref cb
                        :param any
                _ console.log('renameFolder', oldPath, 'to', newPath)
                const fs
                    await 
                        _ getFs
                _ fs.rename(oldPath, newPath, callback)
            m renameFile
                async
                param oldPath
                    :string 
                param newPath
                    :string 
                param callback
                    :ref cb
                        :param any
                _ console.log('renameFile', oldPath, 'to', newPath)
                const fs
                    await 
                        _ getFs
                _ fs.rename(oldPath, newPath, callback)
            m copyFile
                async
                param fromPath
                    :string 
                param destPath
                    :string 
                param callback
                    :ref cb
                        :param any
                _ console.log('copyFile', fromPath, 'to', destPath)
                const fs
                    await 
                        _ getFs
                _ fs.copyFile(fromPath, destPath, callback)
            m copyFolder
                async
                param fromPath
                    :string 
                param destPath
                    :string 
                param callback
                    :ref cb
                        :param any
                _ console.log('copyFolder', fromPath, 'to', destPath)
                const fs
                    await 
                        _ getFs
                _ fs.copyFolder(fromPath, destPath, callback)
            m moveFile
                async
                param fromPath
                    :string 
                param destPath
                    :string 
                param callback
                    :ref cb
                        :param any
                _ console.log('moveFile', fromPath, 'to', destPath)
                const fs
                    await 
                        _ getFs
                _ fs.moveFile(fromPath, destPath, callback)
            m moveFolder
                async
                param fromPath
                    :string 
                param destPath
                    :string 
                param callback
                    :ref cb
                        :param any
                _ console.log('moveFolder', fromPath, 'to', destPath)
                const fs
                    await 
                        _ getFs
                _ fs.moveFolder(fromPath, destPath, callback)
    export 
        async-function isDirectory
            param folderPath
                :string 
            :return
                :ref Promise
                    :param boolean
            const fs
                await 
                    _ getFs
            return 
                new Promise
                    async=> 
                        param resolve
                        param reject
                        _ fs.isDirectory
                            @ folderPath
                            => 
                                param err
                                param result
                                _ console.log('isDirectory', err, result, folderPath)
                                if err
                                    _ reject(err)
                                _ resolve(result)
    export 
        async-function isFile
            param filePath
                :string 
            :return
                :ref Promise
                    :param boolean
            const fs
                await 
                    _ getFs
            return 
                new Promise
                    async=> 
                        param resolve
                        param reject
                        _ fs.isFile
                            @ filePath
                            => 
                                param err
                                param result
                                if err
                                    _ reject(err)
                                _ resolve(result)
    export 
        async-function writeFile
            param filePath
                :string 
            param content
                :string 
            :return
                :ref Promise
                    :param any
            const fs
                await 
                    _ getFs
            return 
                new Promise
                    async=> 
                        param resolve
                        param reject
                        _ fs.write
                            @ filePath
                            @ content
                            => 
                                param err
                                param result
                                if err
                                    _ reject(err)
                                _ resolve(result)
                                #
                                    # console.log('browserfs.writeFile', err, result, filePath, content);
                                    # fs.read(filePath, (err, content)=> {
                                    # console.log('browserfs.read', err, content);
                                    # 
                                    # });
    export 
        async-function deleteFolder
            param folderPath
                :string 
            :return
                :ref Promise
                    :param any
            const fs
                await 
                    _ getFs
            return 
                new Promise
                    async=> 
                        param resolve
                        param reject
                        _ fs.deleteFolder
                            @ folderPath
                            => 
                                param err
                                param result
                                if err
                                    _ reject(err)
                                _ resolve(result)
    export 
        async-function getFiles
            param folderPath
                :string 
            param options
                :ref GetFilesOptions
            :return
                :ref Promise
                    :param 
                        :[ 
                            :ref FileDef
            return 
                new Promise
                    async=> 
                        param resolve
                        param reject
                        const fs
                            await 
                                _ getFs
                        _ fs.getFiles
                            @ folderPath
                            @ options
                            function 
                                param err
                                param files
                                if err
                                    return reject(err)
                                _ resolve(files)
    export 
        async-function getFolders
            param folderPath
                :string 
            param options
                :ref GetFoldersOptions
            :return
                :ref Promise
                    :param 
                        :[ 
                            :ref FolderDef
            return 
                new Promise
                    async=> 
                        param resolve
                        param reject
                        const fs
                            await 
                                _ getFs
                        _ fs.getFolders
                            @ folderPath
                            @ options
                            function 
                                param err
                                param folders
                                if err
                                    return reject(err)
                                _ resolve(folders)

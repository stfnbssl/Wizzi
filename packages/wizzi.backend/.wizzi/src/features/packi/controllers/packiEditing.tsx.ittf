module
    $
        var ctrl = {
            name: 'PackiEditing',
            _stop_path: '/packi',
            path: '/~~'
        }
    
    controller( &ctrl )
            
        $append imports
            import ReactDOMServer 
                from 'react-dom/server'
            import wizziProto
                from 'wizzi.proto'
            import EditorDocument 
                from '../pages/EditorDocument' 
            import PackiItemList 
                from '../components/PackiItemList' 
            const myname = 'features/packi/controller/packiEditing'
            +
            function renderPackiEditor
                param req
                    :ref Request
                param res
                    :ref Response
                param packiItemObject
                    :object
                param queryParams
                    :object

                const index
                    op+
                        + '<!DOCTYPE html>'
                        _ ReactDOMServer.renderToStaticMarkup
                            < EditorDocument 
                                $*
                                @ id {req.params.id} 
                                @ userid {req.params.userid}
                                @ name {req.params.name}
                                *$
                                @ data {packiItemObject}
                                @ queryParams {queryParams}
                _ res.set('Content-Type', 'text/html')
                _ res.set('Content-Length', index.length.toString())
                _ console.log("renderPackiEditor.before sending", index.length)
                _ res.send(index)
                _ console.log("renderPackiEditor.after sending")

        _ wizziProto.start
            @ 'stfnbssl'
            {
            =>
        _ this.router.get('/:userid', this.getPackiItemList)
        _ this.router.get('/:userid/:name', this.getPackiEditorByUserid_Name)
        _ this.router.get('/:userid/:name/*', this.getPackiEditorByUserid_Name)
        
        $append handlers
            handler( getPackiItemList )
                _ wizziProto.getPackiList
                    @ request.params.userid
                    ._ then
                        =>
                            param list
                            const index
                                op+
                                    + '<!DOCTYPE html>'
                                    _ ReactDOMServer.renderToStaticMarkup
                                        html
                                            body
                                                < PackiItemList
                                                    @ items {list}
                            _ response.set('Content-Type', 'text/html');
                            _ response.set('Content-Length', index.length.toString());
                            _ response.send(index)
                    ._ catch
                        =>
                            param err
                                :any
                            log myname + '.getPackiItemList.err', Object.keys(err)
                            _ sendFailure(response, err, 501)
            
            handler( getPackiEditorByUserid_Name )
                # TODO
                # log myname + '.getPackiEditorByUserid_Name', request
                const queryParams = {}
                const parts = request.path.split('/')
                _ wizziProto.getPackiItem_Object_By_Owner_Name
                    @ parts[1] 
                    @ parts.slice(2).join('/')
                    ._ then
                        =>
                            param result
                                :object
                            _ renderPackiEditor
                                @ request
                                @ response
                                {
                                    @ type 'success'
                                    @ packi result
                                @ queryParams
                    ._ catch
                        =>
                            param err
                                :any
                            log myname + '.getPackiEditorByUserid_Name.err', Object.keys(err)
                            _ sendFailure(response, err, 501)

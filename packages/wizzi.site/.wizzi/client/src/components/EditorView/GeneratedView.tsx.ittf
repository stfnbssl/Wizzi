module
    import 
        as React
        from 'react'
    import 
        @ withStyles
        @ createStyles
        @ Theme
        from '@material-ui/core/styles'
    import List from '@material-ui/core/List'
    import ListItem from '@material-ui/core/ListItem'
    import Tooltip from '@material-ui/core/Tooltip'
    import IconButton from '@material-ui/core/IconButton'
    import ViewListIcon from '@material-ui/icons/ViewList'
    import HelpIcon from '@material-ui/icons/Help'
    import InfoIcon from '@material-ui/icons/Info'
    import SimpleEditor from '../Editor/SimpleEditor'
    import IFramePage from '../widgets/IFramePage'
    $if wzCtx.TODO
        import MarkdownElement from '../../docs/MarkdownElement'
    :type ViewKindType
        :union 
            :literal 'generated'
            :literal 'mtree'
            :literal 'debug'
            :literal 'browser'
    :type Props
        :{ 
            :p classes
                :any 
            :p generatedContent
                :string 
            :p generatedSourcePath
                :string 
                :optional
            :p splitViewKind
                :string 
    :type State
        :{ 
            :p view
                :union 
                    :ref ViewKindType
                    :null 
    class GeneratedView
        super React.Component
            :param 
                :ref Props
            :param 
                :ref State
        p state
            { 
                @ view
                    + 'generated'
                        :as 
                            :ref ViewKindType
        p _handleGenerated
            => 
                _ this.setState
                    { 
                        @ view 'generated'
        p _handleMTree
            => 
                _ this.setState
                    { 
                        @ view 'mtree'
        p _handleDebug
            => 
                _ this.setState
                    { 
                        @ view 'debug'
        p _handleBrowser
            => 
                _ this.setState
                    { 
                        @ view 'browser'
        m render
            const 
                { 
                    @ classes
                    @ splitViewKind
                = this.props
            const 
                { 
                    @ view
                = this.state
            const selectedFile = 'gen.txt'
            const files
                :ref PackiFiles
                {
                    { [selectedFile]
                        @ contents this.props.generatedContent
                        @ type "CODE"
            return 
                div 
                    @ className
                        iif splitViewKind === 'right'
                            then classes.containerFull
                            else classes.container
                    { 
                        && 
                            + view === 'generated'
                            div 
                                @ className {classes.editor}
                                < SimpleEditor 
                                    @ path ""
                                    @ value {this.props.generatedContent}
                                    @ selectedFile {selectedFile}
                                    @ files {files}
                                    @ onValueChange
                                        => 
                                            + null
                                    @ lineNumbers "on"
                    { 
                        && 
                            + view === 'browser'
                            div 
                                @ className {classes.editor}
                                { 
                                    iif (this.props.generatedSourcePath.endsWith('.html.ittf') || this.props.generatedSourcePath.endsWith('.svg.ittf'))
                                        then
                                            < IFramePage 
                                                @ content {this.props.generatedContent}
                                        else
                                            $if wzCtx.TODO
                                                iif this.props.generatedSourcePath.endsWith('.md.ittf')
                                                    then
                                                        < MarkdownElement 
                                                            @ text {this.props.generatedContent}
                                                    else
                                                        h1 
                                                            + No viewer for document
                                                            + {this.props.generatedSourcePath}
                                            $else
                                                h1 
                                                    + No viewer for document
                                                    + {this.props.generatedSourcePath}

                    div 
                        @ className {classes.sidebar}
                        < List 
                            < ListItem 
                                @ disableGutters {true}
                                < Tooltip 
                                    @ title "View generated content"
                                    < IconButton 
                                        @ onClick {this._handleGenerated}
                                        @ classes
                                            { 
                                                @ root classes.iconButton
                                        < ViewListIcon 
                            < ListItem 
                                @ disableGutters {true}
                                < Tooltip 
                                    @ title "View mTree"
                                    < IconButton 
                                        @ onClick {this._handleMTree}
                                        @ classes
                                            { 
                                                @ root classes.iconButton
                                        < HelpIcon 
                            < ListItem 
                                @ disableGutters {true}
                                < Tooltip 
                                    @ title "View mTree build script"
                                    < IconButton 
                                        @ onClick {this._handleDebug}
                                        @ classes
                                            { 
                                                @ root classes.iconButton
                                        < InfoIcon 
                            < ListItem 
                                @ disableGutters {true}
                                < Tooltip 
                                    @ title "Browse artifact"
                                    < IconButton 
                                        @ onClick {this._handleBrowser}
                                        @ classes
                                            { 
                                                @ root classes.iconButton
                                        < InfoIcon 
    const muiStyles
        => 
            param theme
                :ref Theme
            _ createStyles
                { 
                    { container
                        @ display 'flex'
                        @ flexDirection 'row'
                        @ borderLeft '1px solid #cccccc'
                        @ width '44vw'
                        @ height '100%'
                    { containerFull
                        @ display 'flex'
                        @ flexDirection 'row'
                        @ borderLeft '1px solid #cccccc'
                        @ width '100%'
                        @ height '100%'
                    { editor
                        @ padding '5px'
                        @ flex 'auto'
                    { sidebar
                        @ display 'flex'
                        @ flexDirection 'column'
                        @ padding '15px'
                        @ background theme.palette.primary.light
                    { iconButton
                        @ padding '10px'
    export-default withStyles(muiStyles)(GeneratedView)

module
    import 
        as React
        from 'react'
    import 
        @ StyleSheet
        @ css
        from 'aphrodite'
    import 
        @ prefTypes
        @ withThemeName
        from '../../features/preferences'
    import colors from '../../configs/colors'
    :type Props
        :{ 
            :p theme
                :ref prefTypes.ThemeName
            :p value
                :union 
                    :string 
                    :undefined 
            :p disabled
                :optional 
                :boolean 
            :p onChange
                :=> 
                    :void 
                    param event
                        :ref React.ChangeEvent
                            :param 
                                :ref HTMLInputElement
            :p placeholder
                :optional 
                :string 
            :p name
                :optional 
                :string 
            :p type
                :optional 
                :string 
            :p autoFocus
                :optional 
                :boolean 
            :p error
                :optional 
                :union 
                    :ref Error
                    :null 
    :type State
        :{ 
            :p focused
                :boolean 
    class LargeInput
        super React.Component
            :param 
                :ref Props
            :param 
                :ref State
        p state
            { 
                @ focused true
        m focus
            @expr this._input.current && this._input.current.focus()
        => _handleFocus
            _ this.setState
                { 
                    @ focused true
        => _handleBlur
            _ this.setState
                { 
                    @ focused false
        p _input
            _ React.createRef
                :param 
                    :ref HTMLInputElement
        m render
            return 
                div 
                    @ className {css(styles.container)}
                    input 
                        @ ref {this._input}
                        @ autoFocus {this.props.autoFocus}
                        @ className
                            _ css
                                @expr styles.input
                                iif this.props.error
                                    then styles.error
                                    else styles.normal
                                iif this.props.theme === 'dark'
                                    then styles.inputDark
                                    else styles.inputLight
                        @ value {this.props.value}
                        @ name {this.props.name}
                        @ type {this.props.type}
                        @ disabled {this.props.disabled}
                        @ onChange {this.props.onChange}
                        @ placeholder {this.props.placeholder}
                        @ onFocus {this._handleFocus}
                        @ onBlur {this._handleBlur}
                    { 
                        iif this.state.focused && this.props.error
                            then
                                div 
                                    @ className {css(styles.validation)}
                                    + {this.props.error.message}
                            else null
    export-default withThemeName(LargeInput)
    const styles
        _ StyleSheet.create
            { 
                { container
                    @ position 'relative'
                { input
                    @ outline 0
                    @ fontSize 16
                    @ borderRadius 3
                    @ padding '12px 14px 12px 14px'
                    @ lineHeight '22px'
                    @ width '100%'
                    @ borderWidth 1
                    @ borderStyle 'solid'
                { normal
                    @ borderColor 'rgba(36, 44, 58, 0.1)'
                    { ':focus'
                        @ borderColor colors.primary
                { error
                    @ borderColor colors.error
                { inputLight
                    @ backgroundColor '#FFFFFF'
                { inputDark
                    @ backgroundColor 'rgba(0, 0, 0, .16)'
                { validation
                    @ position 'absolute'
                    @ backgroundColor colors.error
                    @ color 'white'
                    @ padding '6px 12px'
                    @ borderRadius 3
                    @ marginTop 8
                    @ textAlign 'left'
                    @ zIndex 1
                    { ':before'
                        @ content '""'
                        @ display 'block'
                        @ position 'absolute'
                        @ bottom '100%'
                        @ width 0
                        @ height 0
                        @ borderLeft '6px solid transparent'
                        @ borderRight '6px solid transparent'
                        @ borderBottom
                            `lit 
                                + 6px solid&nbsp;
                                @ colors.error
                                + 

$group

    $ 
        var mixMisc = 'misc(';

    ${'$'}
        var defaultProps = [];

    ${mixMisc} setMyProps, &md )

    import React
        @ FunctionComponent
        from 'react'
    ${'$'}if md.styled
        # see https://mxstbr.blog/2016/11/styled-components-magic-explained/
        import styled
            @ keyframes
            @ css
            from 'styled-components'
    ${'$'}if md.aphrodite
        import 
            @ StyleSheet
            @ css
            from 'aphrodite'
        import classnames from 'classnames'
    +
    ${'$'}hook imports
    export
        :interface ${'$'}{md.name}Props
            $$ :{
            ${'$'}foreach prop in myProps
                ${'$'} if (prop.xdefault) { defaultProps.push(prop); }
                ${'$'}include setPropType
    +
    ${'$'}hook styles
    export
        const ${'$'}{md.name}
            :ref FunctionComponent
                :param
                    :ref ${'$'}{md.name}Props
            =>
                {
                    ${'$'}foreach prop in myProps
                        @ ${'$'}{prop.name}
                ${'$'}hook

    ${'$'}if defaultProps.length > 0
        set ${'$'}{md.name}.defaultProps
            {
                ${'$'}foreach prop in defaultProps
                    ${'$'}if prop.type == 'string'
                        @ ${'$'}{prop.name} "${'$'}{prop.xdefault}"
                    ${'$'}else
                        @ ${'$'}{prop.name} ${'$'}{prop.xdefault}

    export-default ${'$'}{md.name}
module
    $
        var md = {
            styled: true,
            name: "CreatePacki",
            props: [
                { name: "data", type: "any", ref: true },
            ],
            stateProps: [
                { name: "packi_name", type: "string" },
                { name: "packi_description", type: "string" },
                { name: "packi_schema", type: "string" },
                { name: "packi_main_ittf", type: "string" },
                { name: "packi_type", type: "string" },
                { name: "packi_add_context", type: "boolean" },
                { name: "packi_add_tfolder", type: "boolean" },
            ]
        }

    v08/ts/react/component(&md)
        $append imports
            import HR from './widgets/HR'
            import FormContainer from './widgets/FormContainer'
            import FormTitle from './widgets/FormTitle'
            import FormGroup from './widgets/FormGroup'
            import FormCheckBox from './widgets/FormCheckBox'
            import FormRadioBox from './widgets/FormRadioBox'
            import FormButton from './widgets/FormButton'
        
        $append styles
            :interface RootStyleProps
            styled StyledRoot .div<RootStyleProps>
                display flex

        +
        m componentDidMount
        +
        => handleInputChange
            param ev
                :ref React.ChangeEvent
                    :param 
                        :ref HTMLInputElement
            log 'handleInputChange', ev.target.type, ev.target.checked, ev.target.value
            _ this.setState
                { 
                    @ [ev.target.name] (ev.target.type == 'checkbox' ? ev.target.checked : ev.target.value)
        +
        m render
            log 'CreatePacki.render', 'state', this.state
            return
                < FormContainer
                    < FormTitle
                        @ title 'Create a new packi'
                        @ subtitle 'A packi contains the ittf documents 
                            \b for a single software artifact or for an entire project.'
                    < HR
                    < FormGroup
                        @ label 'Packi name'
                        @ name 'packi_name'
                        @ id 'packi_name'
                        @ required {true}
                        @ value {this.state.packi_name}
                        @ onChange {this.handleInputChange}
                    < HR
                    < FormGroup
                        @ label 'Description'
                        @ name 'packi_description'
                        @ id 'packi_description'
                        @ required {true}
                        @ value {this.state.packi_description}
                        @ onChange {this.handleInputChange}
                    < HR
                    < FormRadioBox
                        @ label 'Single artifact'
                        @ name 'packi_type'
                        @ id 'packi_type_single_artifact'
                        @ checked {this.state.packi_type == 'single_artifact'}
                        @ value 'single_artifact'
                        @ onChange {this.handleInputChange}
                    < FormRadioBox
                        @ label 'Project artifacts'
                        @ name 'packi_type'
                        @ id 'packi_type_project_artifacts'
                        @ checked {this.state.packi_type == 'project_artifacts'}
                        @ value 'project_artifacts'
                        @ onChange {this.handleInputChange}
                    < HR
                    {
                        &&
                            + this.state.packi_type == 'single_artifact'
                            < React.Fragment
                                < FormGroup
                                    @ label 'Wizzi schema'
                                    @ name 'packi_schema'
                                    @ id 'packi_schema'
                                    @ required {true}
                                    @ value {this.state.packi_schema}
                                    @ onChange {this.handleInputChange}
                                < HR
                                < FormGroup
                                    @ label 'Main ittf'
                                    @ name 'packi_main_ittf'
                                    @ id 'packi_main_ittf'
                                    @ required {true}
                                    @ value {this.state.packi_main_ittf}
                                    @ onChange {this.handleInputChange}
                                < HR
                    < FormCheckBox
                        @ label 'Add a context packi'
                        @ name 'packi_add_context'
                        @ id 'packi_add_context'
                        @ value {this.state.packi_add_context}
                        @ onChange {this.handleInputChange}
                    < HR
                    < FormCheckBox
                        @ label 'Add a tfolder dependency'
                        @ name 'packi_add_tfolder'
                        @ id 'packi_add_tfolder'
                        @ value {this.state.packi_add_tfolder}
                        @ onChange {this.handleInputChange}
                    < HR
                    < FormButton
                        @ label 'Create packi'
                        @ id 'btn_create_packi'

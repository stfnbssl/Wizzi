{"version":3,"file":"SearchResults.6f16092d604366dde50d.chunk.js","sources":["webpack://wizzi.frontend/./src/components/Search/SearchResults.tsx","webpack://wizzi.frontend/./src/assets/snack-icon-color.svg"],"sourcesContent":["/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi-js\\dist\\lib\\artifacts\\ts\\module\\gen\\main.js\n    package: wizzi-js@0.7.8\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi\\packages\\wizzi.frontend\\.wizzi\\src\\components\\Search\\SearchResults.tsx.ittf\n    utc time: Sat, 01 May 2021 04:43:27 GMT\n*/\nimport {StyleSheet, css} from 'aphrodite';\nimport {request, gql} from 'graphql-request';\nimport debounce from 'lodash/debounce';\nimport nullthrows from 'nullthrows';\nimport * as React from 'react';\nimport {AutoSizer, List, InfiniteLoader} from 'react-virtualized';\nimport {withThemeName, ThemeName} from '../../features/preferences/index';\nimport {c} from '../ThemeProvider';\nimport {ProgressIndicator} from '../widgets/ProgressIndicator';\nimport SearchPlaceholder from './SearchPlaceholder';\nconst ENDPOINT = `${nullthrows(process.env.API_SERVER_URL)}/--/graphql`;\nconst SEARCH_SNACKS = gql`\n  query($query: String!, $offset: Int!, $limit: Int!) {\n    search(type: SNACKS, query: $query, offset: $offset, limit: $limit) {\n      __typename\n      ... on SnackSearchResult {\n        id\n        snack {\n          slug\n          name\n          description\n        }\n      }\n    }\n  }\n`;\ntype Snack = { \n    slug: string;\n    name: string;\n    description: string;\n};\ntype Props = { \n    query: string;\n    theme: ThemeName;\n};\ntype Data = { \n    id: string;\n    snack: Snack;\n}[];\ntype State = { \n    status: { \n        type: 'loading';\n        data: Data;\n    } | { \n        type: 'success';\n        data: Data;\n    } | { \n        type: 'failure';\n        error: Error;\n    };\n};\nconst PAGE_SIZE = 30;\nclass SearchResults extends React.Component<Props, State> {\n    state: State = {\n        status: {\n            type: 'success', \n            data: []\n         }\n    }\n    ;\n    componentDidMount() {\n        if (this.props.query) {\n            this._fetchResultsNotDebounced(this.props.query);\n        }\n    }\n    componentDidUpdate(prevProps: Props) {\n        if (this.props.query !== prevProps.query) {\n            this._fetchResults(this.props.query);\n        }\n    }\n    _fetchResultsNotDebounced = async (query: string, previous: Data = []) => {\n    \n        this.setState({\n            status: {\n                type: 'loading', \n                data: previous\n             }\n         })\n        try {\n            \n            // @ts-ignore\n            const results: {  search: Data; } = await request(ENDPOINT, SEARCH_SNACKS, { query: this.props.query,  offset: previous.length,  limit: PAGE_SIZE  }); \n            this.setState({\n                status: {\n                    type: 'success', \n                    data: [\n                        ...previous, \n                        ...results.search\n                    ]\n                 }\n             })\n        } \n        catch (error) {\n            console.error('Error fetching search results', error);\n            this.setState({\n                status: {\n                    type: 'failure', \n                    error\n                 }\n             })\n        } \n    }\n    ;\n    _fetchResults = debounce(this._fetchResultsNotDebounced, 1000);\n    _fetchMore = () => {\n        const {\n            status\n         } = this.state;\n        return this._fetchResultsNotDebounced(this.props.query, status.type === 'success' ? status.data : []);\n    };\n    _renderRow = ({\n        data: {\n            snack\n         }, \n        style, \n        key\n     }: { \n        data: { \n            snack: Snack;\n        };\n        style: object;\n        key: string;\n    }) => \n         (\n        <div\n         key={key} style={style}>\n            <a\n             target=\"_blank\" href={`/${snack.slug}`} className={css(styles.item)}>\n                <img\n                 className={css(styles.icon)} src={this.props.theme === 'dark' ? require('../../assets/snack-icon-dark.svg') : require('../../assets/snack-icon-color.svg')} />\n                <div\n                 className={css(styles.content)}>\n                    <h4\n                     className={css(styles.title)}>\n                        {snack.name}\n                    </h4>\n                    <p\n                     className={css(styles.description)}>\n                        {snack.description}\n                    </p>\n                </div>\n            </a>\n        </div>\n        )\n    ;\n    render() {\n        const {\n            status\n         } = this.state;\n        if (!this.props.query) {\n            return  (\n                <SearchPlaceholder\n                 label=\"Results will appear here.\" />\n                )\n            ;\n        }\n        if (status.type === 'failure') {\n            return  (\n                <SearchPlaceholder\n                 label=\"An error ocurred. Try again after some time.\" />\n                )\n            ;\n        }\n        if (status.type === 'loading' && !status.data?.length) {\n            return  (\n                <div\n                 className={css(styles.loadingContainer)}>\n                    <ProgressIndicator\n                     />\n                    <SearchPlaceholder\n                     label=\"Searchingâ€¦\" />\n                </div>\n                )\n            ;\n        }\n        if (status.type === 'success' && !status.data?.length) {\n            return  (\n                <SearchPlaceholder\n                 label=\"No results found.\" />\n                )\n            ;\n        }\n        return  (\n            <div\n             className={css(status.type === 'loading' ? styles.loadingContainer : styles.container)}>\n                {\n                    status.type === 'loading' ?  (\n                        <ProgressIndicator\n                         />\n                        )\n                     : null\n                }\n                <AutoSizer\n                >\n                    {\n                        ({\n                            height, \n                            width\n                         }) => \n                        \n                             (\n                            <InfiniteLoader\n                             isRowLoaded={({\n                                    index\n                                 }) => \n                                \n                                    index < status.data.length\n                            } loadMoreRows={this._fetchMore} rowCount={status.data.length + 1}>\n                                {\n                                    ({\n                                        onRowsRendered, \n                                        registerChild\n                                     }) => \n                                    \n                                         (\n                                        <List \n                                            ref={registerChild}\n                                            onRowsRendered={onRowsRendered}\n                                            height={height}\n                                            width={width}\n                                            rowCount={status.data.length}\n                                            rowHeight={72}\n                                            rowRenderer={({\n                                                    index, \n                                                    style, \n                                                    key\n                                                 }) => \n                                                \n                                                    this._renderRow({\n                                                        data: status.data[index], \n                                                        style, \n                                                        key\n                                                     })\n                                            }\n                                         />\n                                        )\n                                    \n                                    \n                                }\n                            </InfiniteLoader>\n                            )\n                        \n                        \n                    }\n                </AutoSizer>\n            </div>\n            )\n        ;\n    }\n}\nexport default withThemeName(SearchResults);\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1\n     }, \n    loadingContainer: {\n        display: 'flex', \n        flex: 1\n     }, \n    icon: {\n        display: 'block', \n        height: 36, \n        width: 36, \n        marginTop: 4\n     }, \n    item: {\n        height: 72, \n        display: 'flex', \n        padding: '16px 24px', \n        cursor: 'pointer', \n        color: 'inherit', \n        textDecoration: 'none', \n        borderBottom: `1px solid ${c('border')}`, \n        ':hover': {\n            backgroundColor: c('hover')\n         }\n     }, \n    content: {\n        marginLeft: 16\n     }, \n    title: {\n        fontSize: 16, \n        fontWeight: 'bold', \n        margin: 0, \n        whiteSpace: 'nowrap', \n        textOverflow: 'ellipsis'\n     }, \n    description: {\n        fontSize: 14, \n        margin: 0, \n        whiteSpace: 'nowrap', \n        textOverflow: 'ellipsis'\n     }\n });\n","export default __webpack_public_path__ + \"assets/640d63b24b3ef5db5b2bdbb87e62152a.svg\";"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAwCA;AACA;AAAA;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAFA;AADA;AACA;AAgBA;AAEA;AACA;AACA;AACA;AAFA;AADA;AACA;AAKA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AADA;AASA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AALA;AAeA;AAAA;AADA;AAGA;AAAA;AAAA;AADA;AAGA;AAAA;AADA;AAGA;AADA;AAGA;AADA;AAKA;AADA;AACA;;;;;;AA7EA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AA4EA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAEA;AADA;AAIA;AACA;AAAA;AACA;AAEA;AADA;AAIA;AACA;AAAA;AACA;AAEA;AADA;AAKA;AADA;AAKA;AACA;AAAA;AACA;AAEA;AADA;AAIA;AACA;AAAA;AAEA;AADA;AAaA;AACA;AAFA;AAOA;AACA;AADA;AAKA;AAAA;AANA;AASA;AACA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAbA;AAiCA;;;;AApMA;AACA;AAqMA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAYA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AApCA;AACA;A;;;;;;;;;;;;;AClQA;AACA;A;;A","sourceRoot":""}
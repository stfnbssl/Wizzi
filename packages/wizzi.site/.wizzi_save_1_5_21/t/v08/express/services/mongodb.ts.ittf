$group
    $params &md
    import mongoose from 'mongoose'
    import
        @ ModelBuilderType
        from '../features/app'
    import
        @ ConfigType
        from '../features/config'
    +
    export
        function mongodbStart
            param config
                :ref ConfigType
            param modelBuilders
                :[
                    :ref ModelBuilderType
            +
            const { mongoUser, mongoPassword, mongoPath } = config;
            const connectUrl = `mongodb+srv://${mongoUser}:${mongoPassword}${mongoPath}`;
            set mongoose.Promise = global.Promise
            return
                _ mongoose.connect
                    @ connectUrl
                    {
                        @ useNewUrlParser true
                        @ useUnifiedTopology true
                    ._ then
                        =>
                            log 'Mongodb. Connected to', mongoPath
                            _ modelBuilders.forEach
                                =>
                                    param builder
                                    _ builder.buildModel
                            return 'Connected'
                        =>
                            param err
                            throw new Error('\n\nMongodb. \nCannot connect to \n"' + connectUrl + '". \n\n' + err.message + '\n\n')
    +
    export
        const close
            =>
                _ mongoose.connection.close()

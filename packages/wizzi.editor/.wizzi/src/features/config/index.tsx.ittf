module
    import
        as defaults
        from './defaults'
    import
        as sdk
        from './sdk'
    import
        @ PackiFile
        from '../packi'
    +
    export
        :type ConfigType
            :{
                :p SERVER_URL
                    :string
                :p API_URL
                    :string
                :p AUTH_URL
                    :string
                :p AUTH_PROVIDERS_URL
                    :string
                :p DEFAULT_SDK_VERSION
                    :string
                :p DEFAULT_PACKI_NAME
                    :string
                :p DEFAULT_PACKI_DESCRIPTION_SAVED
                    :string
                :p DEFAULT_PACKI_DESCRIPTION_EMPTY
                    :string
                :p DEFAULT_PACKI_DESCRIPTION
                    :string
                :p EDITOR_LOAD_FALLBACK_TIMEOUT
                    :number
                :p DEFAULT_PACKI_DEPENDENCIES
                    :{
                        :index
                            :ref PackiDependency
                            param path
                                :string
                :p DEFAULT_PACKI_CODE
                    :{
                        :index
                            :ref PackiFile
                            param path
                                :string
                $if wzCtx.Build.usePackiLocal
                    :p BROWSERFS_PACKI_STORE
                        :string
                    :p BROWSERFS_PACKIES_FOLDER
                        :string
                    :p BROWSERFS_PACKIES_ROOT
                        :string
                    :p BROWSERFS_PACKI_CONFIG_FILE
                        :string
                :p PREFERENCES_KEY
                    :string
    +
    const ENV
        iif process.env.NODE_ENV
            then process.env.NODE_ENV
            else 'development'
    +
    const PLATFORM
        iif process.env.PLATFORM
            then process.env.PLATFORM
            else 'local'
    +
    let _config
        :ref ConfigType
    +
    function getConfig
        if _config == null
            set _config =
                {
                    @ SERVER_URL '${wzCtx.App.baseUrl}'
                    @ API_URL '${wzCtx.App.baseUrl}/api/v1'
                    @ AUTH_URL '${wzCtx.App.baseUrl}/api/v1/auth'
                    @ AUTH_PROVIDERS_URL '${wzCtx.App.baseUrl}/auth'
                    @ versions sdk.versions
                    @ DEFAULT_SDK_VERSION sdk.DEFAULT_SDK_VERSION
                    @ DEFAULT_PACKI_NAME defaults.DEFAULT_PACKI_NAME
                    @ DEFAULT_PACKI_DESCRIPTION_SAVED defaults.DEFAULT_PACKI_NAME
                    @ DEFAULT_PACKI_DESCRIPTION_EMPTY defaults.DEFAULT_PACKI_DESCRIPTION_EMPTY
                    @ DEFAULT_PACKI_DESCRIPTION defaults.DEFAULT_PACKI_DESCRIPTION
                    @ EDITOR_LOAD_FALLBACK_TIMEOUT defaults.EDITOR_LOAD_FALLBACK_TIMEOUT
                    @ DEFAULT_PACKI_DEPENDENCIES defaults.DEFAULT_PACKI_DEPENDENCIES
                    @ DEFAULT_PACKI_CODE defaults.DEFAULT_PACKI_CODE
                    $if wzCtx.Build.usePackiLocal
                        @ BROWSERFS_PACKI_STORE 'packyStore'
                        @ BROWSERFS_PACKIES_ROOT '/ixdb'
                        @ BROWSERFS_PACKIES_FOLDER '/ixdb/packies'
                        @ BROWSERFS_PACKI_CONFIG_FILE 'packi.config.json'
                    @ PREFERENCES_KEY 'packi.preferences.config'
            log 'features.config', _config
        return _config
    +
    export
        const config
            :ref ConfigType
            = getConfig()
    +
    export
        const DEFAULT_PACKI_NAME = config.DEFAULT_PACKI_NAME
    export
        const DEFAULT_PACKI_DESCRIPTION_SAVED = config.DEFAULT_PACKI_DESCRIPTION_SAVED
    export
        const DEFAULT_PACKI_DESCRIPTION_EMPTY = config.DEFAULT_PACKI_DESCRIPTION_EMPTY
    export
        const DEFAULT_PACKI_DESCRIPTION = config.DEFAULT_PACKI_DESCRIPTION
    export
        const DEFAULT_PACKI_CODE = config.DEFAULT_PACKI_CODE
    +
    export-default config

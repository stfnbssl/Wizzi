$group
	$params &opt

    $$
    $$ Example skeleton specific for the 'wizzi' kernel package
    $$

	#
		# Example: ${opt.name}
		#
	
    $include example_includes
    var async = require('async')
    var pluginsBaseFolder = null
    
    $if opt.folderLevel == 1
        var wizziIndex = require('../index')
        set pluginsBaseFolder
            _ path.resolve
                @ __dirname
                @ '..'
                @ '..'
                @ '..'

    $elif opt.folderLevel == 2
        var wizziIndex = require('../../index')
        set pluginsBaseFolder
            _ path.resolve
                @ __dirname
                @ '..'
                @ '..'
                @ '..'
                @ '..'

    $elif opt.folderLevel == 3
        var wizziIndex = require('../../../index')
        set pluginsBaseFolder
            _ path.resolve
                @ __dirname
                @ '..'
                @ '..'
                @ '..'
                @ '..'
                @ '..'

	$hook imports

    function createWizziFactory
        param globalContext
        param callback

        _ wizziIndex.fsnoaclFactory
            {
                { plugins
                    $hook plugins
                @ globalContext globalContext || {}
            @ callback
    
    $hook functions

	var ${opt.name}
		function
			param step_callback
			_ heading1
				@ 'EXAMPLE'
			$hook

    set ${opt.name}.__name = '${opt.name}'
    
	example_prints( ${opt.name}, ${opt.level}, ${opt.step} )

	set module.exports = ${opt.name}

	if typeof require != 'undefined' && require.main === module
		_ ${opt.name}
module
    $
        var ctrl = {
            name: 'Productions',
            path: '/api/v1/wizzi/productions'
        }
    
    controller( &ctrl )
        $append imports
            import fs
                from 'fs'
            import path
                from 'path'
            import
                @ fsTypes
                from '../../filesystem'
            import
                @ ArtifactRequest
                @ MetaContext
                from '../types'
            import
                as WizziFactory
                from '../factory'
            import
                as wizziProds
                from '../productions'
            import
                @ packiTypes
                from '../../packi'
            import
                @ config
                from '../../config'
            import
                @ file
                from 'wizzi'
            const myname = 'features/wizzi/controller/productions'

            $include productions/resolveContexts
        
        _ this.router.post('/artifact', this.artifact)
        
        $append handlers
            handler( artifact )
                const artifactRequest
                    :ref ArtifactRequest
                    = request.body
                log myname + 'artifact.received request (keys)', Object.keys(artifactRequest)
                _ resolveContexts
                    @ artifactRequest.contextItems
                    ._ then
                        =>
                            param context
                            log myname + '.artifact.handler.resolvedContext', context
                            if artifactRequest.mainIttf.sourceType == 'fsFiles'
                                _ wizziProds.generateArtifactFs
                                    _ path.join
                                        @ config.ittfPath
                                        @ artifactRequest.mainIttf.sourcePath as string
                                    @ context
                                    ._ then
                                        =>
                                            param value
                                            log 'generateArtifact.result', value
                                            _ sendSuccess
                                                @ response
                                                {
                                                    @ generatedArtifact value
                                    ._ catch
                                        =>
                                            param err
                                            log myname + '.generateArtifact.err', err
                                            _ sendFailure(response, err, 501)                            
                            elif artifactRequest.mainIttf.sourceType == 'packiFiles'
                                _ wizziProds.generateArtifact
                                    @ artifactRequest.mainIttf.sourcePath as string 
                                    @ artifactRequest.mainIttf.sourceFiles as packiTypes.PackiFiles
                                    @ context
                                    ._ then
                                        =>
                                            param value
                                                :any
                                            log 'generateArtifact.result', value
                                            _ sendSuccess
                                                @ response
                                                {
                                                    @ generatedArtifact value
                                    ._ catch
                                        =>
                                            param err
                                                :any
                                            log myname + '.generateArtifact.err', err
                                            _ sendFailure(response, err, 501)
                    ._ catch
                        =>
                            param err
                                :any
                            _ sendFailure(response, err, 501)

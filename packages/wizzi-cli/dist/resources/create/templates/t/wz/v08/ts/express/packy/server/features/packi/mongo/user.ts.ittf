module
    import 
        @ Schema
        @ Model
        @ model
        from "mongoose"
    import 
        @ ModelBuilderType
        from "../../app/types"
    import 
        @ IUserModel
        from "../types"
    const UserSchema
        :ref Schema
            :param 
                :ref IUserModel
        =
            new Schema
                { 
                    { email
                        @ type String
                    @ nickname String
                    @ social_user_id String
                    @ createdAt Date
                    @ lastAccess Date
                    [ packies
                        { 
                            @ type Schema.Types.ObjectId
                            @ ref 'Packi'
        # mongoose models creation is centralized
        # mongodb calls buildModel() when starting, after connection has been established
        # controllers call UserModel() when initialized, after buildModel() has benn called
    export 
        :type UserModelType_stop
            :ref Model
                :param 
                    :ref IUserModel
        # mongoose models creation is centralized
        # mongodb calls buildModel() when starting, after connection has been established
        # controllers call UserModel() when initialized, after buildModel() has benn called
    let userModel
        :ref UserModelType_stop
    export 
        function GetUserModel_stop
            :return
                :ref UserModelType_stop
            return userModel
    export 
        const UserModelBuilder
            :ref ModelBuilderType
            =
                { 
                    @ buildModel
                        => 
                            set userModel =
                                _ model
                                    :param 
                                        :ref IUserModel
                                    @ "User"
                                    @ UserSchema

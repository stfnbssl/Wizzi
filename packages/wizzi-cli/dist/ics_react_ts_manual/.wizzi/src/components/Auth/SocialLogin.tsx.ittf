module
    import React
        @ Component
        from 'react'
    import PropTypes from 'prop-types'
    import io from 'socket.io-client'
    import 
        @ withStyles
        @ createStyles
        @ Theme
        from '@material-ui/core/styles'
    import Typography from '@material-ui/core/Typography'
    import OAuthLogin from './OAuthLogin'
    import PageLoader from '../shared/Spinner'
    import 
        @ config
        from '../../features/config'
    import 
        @ appTypes
        from '../../features/app'
    import 
        @ authTypes
        from '../../features/auth'
    const socket = io(config.SERVER_URL)
    const providers
        [ 
            @ 'github'
    :type Props
        :intersect 
            :ref authTypes.AuthProps
            :{ 
                :p classes
                    :any 
    :type State
        :{ 
            :p loading
                :boolean 
    class SocialLogin
        super React.Component
            :param 
                :ref Props
            :param 
                :ref State
        p state
            { 
                @ loading true
        m componentDidMount
            _ fetch
                `lit 
                    + 
                    @ config.SERVER_URL
                    + /wake-up
                ._ then
                    => 
                        param res
                        if res.ok
                            _ this.setState
                                { 
                                    @ loading false
        m render
            const 
                { 
                    @ classes
                    @ loggedUser
                    @ onLoggedOn
                    @ onLoggedOff
                = this.props
            const buttons
                => 
                    param providers
                        :[ 
                            :string 
                    param socket
                        :any 
                    _ providers.map
                        => 
                            param provider
                            < OAuthLogin 
                                @ provider {provider}
                                @ key {provider}
                                @ socket {socket}
                                @ loggedUser {loggedUser}
                                @ onLoggedOn {onLoggedOn}
                                @ onLoggedOff {onLoggedOff}
            return 
                div 
                    @ className {classes.wrapper}
                    div 
                        @ className {classes.container}
                        { 
                            iif this.state.loading
                                then
                                    < PageLoader 
                                else
                                    < React.Fragment 
                                        div 
                                            @ className {classes.display}
                                            + {buttons(providers, socket)}
                                            { 
                                                iif loggedUser
                                                    then null
                                                    else
                                                        < React.Fragment 
                                                            < Typography 
                                                                @ variant "display1"
                                                                + Login using your GitHub account.
                                                            < Typography 
                                                                @ variant "body1"
                                                                + Tokens are not stored. You have to log in at every reload.
    const muiStyles
        => 
            param theme
                :ref Theme
            _ createStyles
                { 
                    { wrapper
                        @ display 'flex'
                        @ flexDirection 'column'
                        @ alignItems 'center'
                    { container
                        @ display 'flex'
                        @ alignItems 'center'
                        @ justifyContent 'space-around'
                        @ height '50vh'
                        @ width '50vw'
                    { display
                        @ display 'flex'
                        @ flexDirection 'column'
                        @ alignItems 'center'
    export-default withStyles(muiStyles)(SocialLogin)

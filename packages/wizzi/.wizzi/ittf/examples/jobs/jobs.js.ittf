common/example/withMonoRepoWizziFactory()
    
    $override requireWizzi
        set wizzi = require('../../index')
    $append plugins
        [ items
            @ 'wizzi-js'
            @ './wizzi-web/dist/index'
            @ './wizzi-core/dist/index'
        @ pluginsBaseFolder
            _ path.resolve
                @ __dirname
                @ '..'
                @ '..'
                @ '..'
                @ '..'

    _ executeLoadFolderModels
        @ 'job_globalModels'
        @ 'wfjob'
        {
        f_cb()
            _ executeFolderJobs
                @ 'job_globalModels'
                @ 'wfjob'
                {
                f_cb()

    function executeLoadFolderModels
        param folder
        param schema
        param context
        param callback

		var suffix
			iif schema === 'ittf'
				then '.ittf'
				else '.' + schema + '.ittf'
		
        var ittfPath
			_ path.join
				@ __dirname
				@ 'ittf'
				@ folder
		
        log 'executeLoadFolderModels.ittfPath,schema', ittfPath, schema
        _ async.mapSeries
            @ getFiles(ittfPath,schema)
            function
                param item
                param callback
                set item = item.substring(0, item.length - suffix.length)
                log 'wizzi-core.examples.jobs.item', item, 'schema', schema
                _ executeLoadModel(item, folder, schema, context, callback)
            f_cb( result )
                r_cb()

	function executeLoadModel
		param name
		param folder
        param schema
        param context
        param callback
		
		var ittfSource
			_ path.join
				@ __dirname
				@ 'ittf'
				@ folder
				iif schema === 'ittf'
					then name + '.ittf'
					else name + '.' + schema + '.ittf'
		
		var jsOutput
			_ path.join
				@ __dirname
				@ 'outputs'
				@ folder
				@ name + '.g.' + schema
		
		log 'wizzi-core.examples.jobs.before-load ittfSource', ittfSource, 'schema', schema
		_ loadWizziModel
			@ ittfSource
			@ context || {}
			f_cb_test( jsWizziModel )
				# log 'wizzi-core.examples.index.loaded ittfSource', ittfSource, 'schema', schema
				# log 'jsWizziModel', jsWizziModel
				if jsWizziModel.toJson
					_ file.write
						@ jsOutput
						_ stringify
							@ jsWizziModel.toJson()
							@ null
							@ 4
				else
					_ file.write
						@ jsOutput
						_ stringify
							@ jsWizziModel
							@ null
							@ 4
                r_cb()

    function executeFolderJobs
        param folder
        param schema
        param context
        param callback

		var suffix
			iif schema === 'ittf'
				then '.ittf'
				else '.' + schema + '.ittf'
		
        var ittfPath
			_ path.join
				@ __dirname
				@ 'ittf'
				@ folder

        _ async.mapSeries
            @ getFiles(ittfPath,schema)
            function
                param item
                param callback
                set item = item.substring(0, item.length - suffix.length)
                log 'wizzi-core.examples.jobs.item', item, 'schema', schema
                _ executeJob(item, folder, schema, context, callback)
            f_cb( result )
                r_cb()

	function executeJob
		param name
		param folder
        param schema
        param context
        param callback
		
		var ittfSource
			_ path.join
				@ __dirname
				@ 'ittf'
				@ folder
				iif schema === 'ittf'
					then name + '.ittf'
					else name + '.' + schema + '.ittf'

		_ executeWizziJob
			@ ittfSource
			@ context || {}
			f_cb_test( jobResult )
                log 'jobResult.mTrees', jobResult.productionContext.mTrees
                log 'jobResult.wizziModels', Object.keys(jobResult.productionContext.wizziModels)
                log 'jobResult.globalModels', jobResult.productionContext.globalModels
                log 'jobResult.artifactCollections', jobResult.productionContext.artifactCollections
                r_cb()
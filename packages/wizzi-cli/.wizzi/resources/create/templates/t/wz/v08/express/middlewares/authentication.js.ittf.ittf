$group
    
    ${'$'}if wzCtx.Build.useAuthentication

        import eoic from 'express-openid-connect';
        const { auth, requiresAuth } = eoic;      
        import 
            @ config
            from '../features/config/index.js'

        ${'$'}hook imports

        # https://github.com/auth0/express-openid-connect
        # Express JS middleware implementing sign on for Express web apps using OpenID Connect.
        # Applications using this library MUST run over secure channels (HTTPS URLs), 
        # otherwise they may experience "invalid state" errors.

        const authConfig
            {
                @ secret config.auth0Secret
                @ issuerBaseURL config.auth0IssuerBaseURL
                @ baseURL config.auth0BaseURL
                @ clientID config.auth0ClientId
                $$ @ clientSecret config.auth0ClientSecret
                ${'$'}if wzCtx.Build.authentication.authRequired
                    @ authRequired true
                ${'$'}else
                    @ authRequired false
                ${'$'}if wzCtx.Build.authentication.userInfo
                    @ idpLogout true
                    { authorizationParams
                        @ response_type 'code id_token'
                ${'$'}if wzCtx.Build.authentication.logout
                    @ auth0Logout true
                ${'$'}hook config

        const port = config.port
        if !authConfig.baseURL && process.env.NODE_ENV !== 'production'
            set authConfig.baseURL =
                `lit 
                    + http://localhost:
                    @ port
        
        export 
            const AuthenticationMiddleware
                => 
                    param app
                    _ app.use
                        _ auth
                            @ authConfig
                    log 'AuthenticationMiddleware.config', authConfig
                    ${'$'}hook
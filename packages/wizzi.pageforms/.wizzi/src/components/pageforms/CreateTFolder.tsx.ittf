module
    $
        var md = {
            styled: true,
            name: "CreateTFolder",
            props: [
                { name: "data", type: "any", ref: true },
            ],
            stateProps: [
                { name: "tfolder_name", type: "string" },
                { name: "tfolder_description", type: "string" },
                { name: "tfolder_schema", type: "string" },
                { name: "tfolder_type", type: "string" },
                { name: "tfolder_add_context", type: "boolean" },
                { name: "tfolder_contexts", type: "array" },
                { name: "tfolder_add_tfolder", type: "boolean" },
                { name: "tfolder_dependencies", type: "array" },
                { name: "tfolder_upload_files", type: "array" },
            ]
        }

    v08/ts/react/component(&md)
        $append imports
            import HR from './widgets/HR'
            import FormContainer from './widgets/FormContainer'
            import FormTitle from './widgets/FormTitle'
            import FormGroup from './widgets/FormGroup'
            import FormCheckBox from './widgets/FormCheckBox'
            import FormRadioBox from './widgets/FormRadioBox'
            import FormRow from './widgets/FormRow'
            import FormFile from './widgets/FormFile'
            import FormButton from './widgets/FormButton'
        
        $append styles
            :interface RootStyleProps
            styled StyledRoot .div<RootStyleProps>
                display flex

        +
        m componentDidMount
        +
        
        $include handle_input_change
        add_context_handlers( tfolder )
        add_tfolder_handlers( tfolder )
        
        => handleTFolderUploadChange
            param files
            log 'CreateTFolder.handleTFolderUploadChange', files
            const uploadfiles = []
            foreach file in files
                if file.webkitRelativePath.endsWith('.ittf')
                    _ uploadfiles.push
                        {
                            @ relPath file.webkitRelativePath
                            @ file file
            _ this.setState
                { 
                    @ tfolder_upload_files uploadfiles

        +
        m render
            log 'CreatePacki.render', 'state', this.state
            return
                < FormContainer
                    < FormTitle
                        @ title 'Create a new tfolder'
                        @ subtitle 'A tfolder contains ittf fragments
                            \b of a single wizzi schema or of many wizzi schemas.'
                    < HR
                    < FormGroup
                        @ label 'TFolder name'
                        @ name 'tfolder_name'
                        @ id 'tfolder_name'
                        @ required {true}
                        @ value {this.state.tfolder_name}
                        @ onChange {this.handleInputChange}
                    < HR
                    < FormGroup
                        @ label 'Description'
                        @ name 'tfolder_description'
                        @ id 'tfolder_description'
                        @ required {true}
                        @ value {this.state.tfolder_description}
                        @ onChange {this.handleInputChange}
                    < HR
                    < FormRadioBox
                        @ label 'Single wizzi schema'
                        @ name 'tfolder_type'
                        @ id 'tfolder_type_single_artifact'
                        @ checked {this.state.tfolder_type == 'single_artifact'}
                        @ value 'single_artifact'
                        @ onChange {this.handleInputChange}
                    < FormRadioBox
                        @ label 'Many wizzi schemas'
                        @ name 'tfolder_type'
                        @ id 'tfolder_type_project_artifacts'
                        @ checked {this.state.tfolder_type == 'project_artifacts'}
                        @ value 'project_artifacts'
                        @ onChange {this.handleInputChange}
                    
                    {
                        &&
                            + this.state.tfolder_type == 'single_artifact'
                            < React.Fragment
                                < HR
                                < FormGroup
                                    @ label 'Wizzi schema'
                                    @ name 'tfolder_schema'
                                    @ id 'tfolder_schema'
                                    @ required {true}
                                    @ value {this.state.tfolder_schema}
                                    @ onChange {this.handleInputChange}
                    
                    add_context_render( tfolder )
                    add_tfolder_render( tfolder )
                    
                    < HR
                    < FormFile
                        @ label 'Upload fragments'
                        @ name 'tfolder_upload'
                        @ id 'tfolder_upload'
                        @ value {this.state.tfolder_upload_files}
                        @ onChange {this.handleTFolderUploadChange}
                    < HR
                    < FormButton
                        @ label 'Create tfolder'
                        @ id 'btn_create_tfolder'
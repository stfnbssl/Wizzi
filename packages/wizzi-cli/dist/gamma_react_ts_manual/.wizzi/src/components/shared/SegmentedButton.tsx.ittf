module
    import 
        as React
        from 'react'
    import 
        @ StyleSheet
        @ css
        from 'aphrodite'
    import 
        @ prefTypes
        @ withThemeName
        from '../../features/preferences'
    import colors from '../../configs/colors'
    :type Segment
        :< T
        :{ 
            :p id
                :ref T
            :p text
                :string 
    :type Props
        :< T
        :{ 
            :p selectedId
                :ref T
            :p onSelect
                :=> 
                    :void 
                    param id
                        :ref T
            :p onClick
                :optional 
                :=> 
                    :void 
            :p segments
                :ref Array
                    :param 
                        :ref Segment
                            :param 
                                :ref T
            :p className
                :optional 
                :string 
            :p theme
                :ref prefTypes.ThemeName
    function SegmentedButton
        :< T
            :string 
        { 
            @ selectedId
            @ onSelect
            @ segments
            @ theme
            :ref Props
                :param 
                    :ref T
        return 
            div 
                @ className {css(styles.container)}
                { 
                    _ segments.map
                        => 
                            { 
                                @ id
                                @ text
                            button 
                                @ onClick
                                    => 
                                        param e
                                        _ e.preventDefault
                                        _ onSelect(id)
                                @ className
                                    _ css
                                        @ styles.button
                                        iif selectedId === id
                                            then
                                                iif theme === 'dark'
                                                    then styles.accentDark
                                                    else styles.accentLight
                                            else null
                                @ key {id}
                                span 
                                    + {text}
    export-default withThemeName(SegmentedButton)
    const styles
        _ StyleSheet.create
            { 
                { container
                    @ display 'flex'
                    @ flexDirection 'row'
                    @ width '100%'
                    @ boxShadow
                        `lit 
                            + inset 0 0 0 1px&nbsp;
                            @ colors.border
                            + 
                    @ borderRadius 3
                    @ overflow 'hidden'
                { button
                    @ flex 1
                    @ cursor 'pointer'
                    @ outline 0
                    @ border 0
                    @ padding '.5em 1em'
                    @ whiteSpace 'nowrap'
                    @ textDecoration 'none'
                    @ transitionDuration '170ms'
                    @ transitionProperty 'color, background'
                    @ transitionTimingFunction 'linear'
                    @ appearance 'none'
                    @ backgroundColor 'transparent'
                    { ':hover'
                        @ backgroundColor 'rgba(0, 0, 0, .08)'
                { accentLight
                    @ color '#fff'
                    @ backgroundColor colors.accent.light
                    { ':hover'
                        @ backgroundColor colors.accent.light
                { accentDark
                    @ color '#000'
                    @ backgroundColor colors.accent.dark
                    { ':hover'
                        @ backgroundColor colors.accent.dark

module
	kind jsfile

	import path
	var wizziUtils = require('wizzi-utils')
	var verify = wizziUtils.verify
	var packageRoot = require('../../index')

	function importFile
		param filePath
		param baseImportPath
		param baseExportPath
		param vfile
		param callback

		if typeof callback === 'undefined'
			set callback = vfile
			# vfile() defaults to local filesystem
			set vfile = wizziUtils.vfile() 

		const dirname = path.dirname(filePath)
		const basename = path.basename(filePath)
		var extension = path.extname(filePath)
		var name = basename.substr(0, basename.length - extension.length)
        var schema
        set extension = extension.substr(1)
		
		var filePathNorm = verify.replaceAll(filePath, '\\', '/')
		var baseImportPathNorm = verify.replaceAll(baseImportPath, '\\', '/')
		var baseExportPathNorm = verify.replaceAll(baseExportPath, '\\', '/')
		var folderNorm = dirname.substr(baseImportPathNorm.length + 1)

		# log 'importFile', baseImportPath, folderNorm, name, schema, extension

		var source
			_ vfile.read
				@ filePath

		var isVue = false
		if extension.toLowerCase() === 'vue'
			set source = '<vue>' + source + '</vue>'
			set schema = 'html'
			set isVue = true

		elif extension.toLowerCase() === 'tsx'
			set schema = 'ts'

		elif extension.toLowerCase() === 'jsx'
			set schema = 'js'
            set extension = 'js'

        else
            set schema = extension

		if !packageRoot.canBeWizzified(schema)
			# log '0', folderNorm, basename
			if folderNorm.length > 0
				_ vfile.write
					_ path.join
						@ baseExportPathNorm
						@ folderNorm
						@ basename
					@ source
					@ callback
			else
				_ vfile.write
					_ path.join
						@ baseExportPathNorm
						@ basename
					@ source
					@ callback
		else
			var options = {}
			if isVue
				set options
					{
						@ embedTag 'vue'
						@ isForVue true
			log ' --- wizzify from ' + filePath
			log '             schema ' + schema
			_ packageRoot.wizzify
				@ schema
				@ source
				@ options
				f_cb_no_err( result )
					var outpath
					if folderNorm.length > 0
						# log '1', folderNorm, name + '.' + extension + '.ittf'
						set outpath
							_ path.join
								@ baseExportPathNorm
								@ folderNorm
								@ name + '.' + extension + '.ittf'
					else
						# log '2', folderNorm, name + '.' + extension + '.ittf'
						set outpath
							_ path.join
								@ baseExportPathNorm
								@ name + '.' + extension + '.ittf'
					log '             to ' + outpath
					if err
						log 'Error', outpath, err
						_ vfile.write
							@ outpath
							@ err
							@ callback
					else
						_ vfile.write
							@ outpath
							@ result
							@ callback

	set module.exports = importFile
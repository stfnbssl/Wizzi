module
    import 
        as React
        from 'react'
    import classnames from 'classnames'
    import 
        @ StyleSheet
        @ css
        from 'aphrodite'
    import colors from '../../configs/colors'
    import usePreferences from '../../features/preferences/usePreferences'
    :type Props
        :{ 
            :p checked
                :boolean 
            :p label
                :string 
            :p onChange
                :=> 
                    :void 
                    param event
                        :ref React.ChangeEvent
                            :param 
                                :ref HTMLInputElement
            :p className
                :optional 
                :string 
    export-default 
        function ToggleSwitch
            param props
                :ref Props
            const [prefs] = usePreferences()
            return 
                label 
                    @ className {classnames(css(styles.container), props.className)}
                    span 
                        @ className {css(styles.label)}
                        + {props.label}
                    span 
                        @ className
                            _ css
                                @ styles.switch
                                iif props.checked
                                    then styles.active
                                    else styles.inactive
                                iif prefs.theme === 'dark'
                                    then styles.dark
                                    else styles.light
                                iif prefs.theme === 'dark'
                                    then
                                        iif props.checked
                                            then styles.darkActive
                                            else styles.darkInactive
                                    else
                                        iif props.checked
                                            then styles.lightActive
                                            else styles.lightInactive
                    input 
                        @ type "checkbox"
                        @ checked {props.checked}
                        @ onChange {props.onChange}
                        @ className {css(styles.check)}
    const styles
        _ StyleSheet.create
            { 
                { container
                    @ display 'flex'
                    @ alignItems 'center'
                    @ margin 8
                    @ cursor 'pointer'
                    @ whiteSpace 'nowrap'
                { switch
                    @ display 'inline-block'
                    @ verticalAlign -4
                    @ width 36
                    @ height 20
                    @ borderRadius 12
                    { ':before'
                        @ content '""'
                        @ display 'inline-block'
                        @ height 14
                        @ width 14
                        @ borderRadius 7
                        @ margin 2
                        @ transition '.2s'
                        @ transform 'translateX(0)'
                { inactive
                    { ':before'
                        @ transform 'translateX(0)'
                { active
                    { ':before'
                        @ transform 'translateX(16px)'
                { light
                    @ border
                        `lit 
                            + 1px solid&nbsp;
                            @ colors.border
                            + 
                { lightInactive
                    { ':before'
                        @ backgroundColor 'rgba(0, 0, 0, .5)'
                { lightActive
                    { ':before'
                        @ backgroundColor colors.primary
                { dark
                    @ border '1px solid rgba(255, 255, 255, .2)'
                { darkInactive
                    { ':before'
                        @ backgroundColor 'rgba(255, 255, 255, .5)'
                { darkActive
                    { ':before'
                        @ backgroundColor colors.content.light
                { check
                    @ display 'none'
                { label
                    @ flex 1
                    @ padding '0 .5em'
                    @ fontWeight 'normal'

$group
    $params &md
    import
        @ Request
        @ Response
        @ RequestHandler
        @ CookieOptions
        from 'express'
    import
        as passport
        from 'passport'
    import
        @ Strategy
            as Auth0Strategy
        from 'passport-auth0'
    import
        @ config
        from '../features/config'
    # Configure Passport to use Auth0
    var strategy
        new Auth0Strategy
            {
                @ domain config.Auth0Domain
                @ clientID config.Auth0PackiClientId
                @ clientSecret config.Auth0PackiClientSecret
                @ callbackURL config.Auth0PackiCallbackUrl
            function
                param accessToken
                param refreshToken
                param extraParams
                param profile
                param done
                # accessToken is the token to call Auth0 API (not needed in the most cases)
                # extraParams.id_token has the JSON Web Token
                # profile has all the information from the user
                return done(null, profile)
    export
        const PassportAuth0Middleware
            =>
                param app
                _ passport.use(strategy)
                # You can use this section to keep a smaller payload
                _ passport.serializeUser
                    function
                        param user
                        param done
                        _ done(null, user)
                _ passport.deserializeUser
                    function
                        param user
                        param done
                        _ done(null, user)
                _ app.use
                    _ passport.initialize
                _ app.use
                    _ passport.session

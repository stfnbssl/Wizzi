module
    import 
        as React
        from 'react'
    import 
        @ StyleSheet
        @ css
        from 'aphrodite'
    import 
        @ withStyles
        @ createStyles
        @ Theme
        from '@material-ui/core/styles'
    import List from '@material-ui/core/List'
    import ListItem from '@material-ui/core/ListItem'
    $$ import ListItemAvatar from '@material-ui/core/ListItemAvatar'
    $$ import ListItemIcon from '@material-ui/core/ListItemIcon'
    import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'
    import ListItemText from '@material-ui/core/ListItemText'
    import IconButton from '@material-ui/core/IconButton'
    import Fab from '@material-ui/core/Fab'
    import DeleteIcon from '@material-ui/icons/Delete'
    $if wzCtx.Build.usePackiAspectGithub
        import 
            @ GitRepositoryMeta
            from '../../features/github'
    import 
        @ ThemeName
        @ withThemeName
        from '../../features/preferences'
    import
        @ c
        from '../ThemeProvider'
    import 
        @ Packi
        @ packiValidations
        from '../../features/packi'
    import Button from '../widgets/Button'
    import EditorForm from '../../features/form/EditorForm'
    :type PackiManagerProps
        :{ 
            :p classes
                :any 
            :p currentPacki
                :ref Packi
                :optional
            :p packiNames
                :[ 
                    :string 
            :p packiTemplateNames
                :[ 
                    :string 
            $if wzCtx.Build.usePackiAspectGithub
                :p ownedGitRepositories
                    :[ 
                        :ref GitRepositoryMeta
            :p onSelectPacki
                :=> 
                    :void 
                    param id
                        :string 
            :p onDeletePacki
                :=> 
                    :void 
                    param id
                        :string 
            :p onCreatePacki
                :=> 
                    :void 
                    param id
                        :string 
                    param kind
                        :string 
            $if wzCtx.Build.usePackiAspectGithub
                :p onCloneGitRepository
                    :=> 
                        :void 
                        param owner
                            :string 
                        param name
                            :string 
                        param branch
                            :string 
                        param ittfOnly
                            :boolean 
                :p onCommitGitRepository
                    :=> 
                        :void 
                        param owner
                            :string 
                        param name
                            :string 
                        param branch
                            :string 
                        param virtualFiles
                            :boolean 
            :p onUploadPackiTemplate
                :=> 
                    :void 
                    param templateId
                        :string 
                    param virtualFiles
                        :boolean 
    :type Props
        :intersect 
            :ref PackiManagerProps
            :{ 
                :p theme
                    :ref ThemeName
    :type modalKind
        :union 
            :literal 'create'
            :literal 'clone'
            :literal 'commit'
            :literal 'saveTemplate'
            :literal 'none'
    :type State
        :{ 
            :p modalVisible
                :ref modalKind
    class PackiManager
        super React.PureComponent
            :param 
                :ref Props
            :param 
                :ref State
        p state
            { 
                @ modalVisible
                    + 'none'
                        :as 
                            :ref modalKind
        p _handleDismissModal
            => 
                _ console.log('_handleDismissModal')
                _ this.setState
                    { 
                        @ modalVisible 'none'
        p _handleShowModal
            => 
                param kind
                    :ref modalKind
                _ this.setState
                    { 
                        @ modalVisible kind
        p _handleCreatePacki
            => 
                param name
                    :string 
                param kind
                    :string 
                _ this._handleDismissModal()
                    # alert('Create packi ' + name + ' of kind ' + kind);
                _ this.props.onCreatePacki(name, kind)
                    # alert('Create packi ' + name + ' of kind ' + kind);
        $if wzCtx.Build.usePackiAspectGithub
            p _handleClonePacki
                => 
                    param id
                        :string 
                    param branch
                        :string 
                    param ittfOnly
                        :boolean 
                    _ this._handleDismissModal()
                        # alert('Clone package ' + id + ' branch ' + branch);
                    _ this.props.onCloneGitRepository(id.split('_')[0], id.split('_')[1], branch, ittfOnly)
                        # alert('Clone package ' + id + ' branch ' + branch);
            p _handleCommitPacki
                => 
                    param id
                        :string 
                    param branch
                        :string 
                    param virtualFiles
                        :boolean 
                    _ this._handleDismissModal()
                    _ alert('Commit package ' + id + ' branch ' + branch)
                    _ this.props.onCommitGitRepository(id.split('_')[0], id.split('_')[1], branch, virtualFiles)
        p _handleUploadPackiTemplate
            => 
                param templateId
                    :string 
                param virtualFiles
                    :boolean 
                _ this._handleDismissModal()
                _ alert('Save packi template ' + templateId)
                _ this.props.onUploadPackiTemplate(templateId, virtualFiles)
        m render
            const 
                { 
                    @ classes
                    @ currentPacki
                    @ packiNames
                    @ packiTemplateNames
                    $if wzCtx.Build.usePackiAspectGithub
                        @ ownedGitRepositories
                    @ onSelectPacki
                    @ onDeletePacki
                = this.props
            const 
                { 
                    @ modalVisible
                = this.state
            const gitBranchesTODO
                [ 
                    @ 'master'
            return 
                div 
                    { 
                        iif modalVisible !== 'none'
                            then null
                            else
                                div 
                                    div 
                                        @ className {css(styles.buttons)}
                                        < Fab 
                                            @ variant "extended"
                                            @ onClick
                                                => 
                                                    _ this._handleShowModal('create')
                                            @ className {classes.fabButton}
                                            + Create new
                                        < Fab 
                                            @ variant "extended"
                                            @ onClick
                                                => 
                                                    _ this._handleShowModal('clone')
                                            @ className {classes.fabButton}
                                            + Git clone
                                        < Fab 
                                            @ variant "extended"
                                            @ onClick
                                                => 
                                                    _ this._handleShowModal('commit')
                                            @ className {classes.fabButton}
                                            + Git commit/push
                                        < Fab 
                                            @ variant "extended"
                                            @ onClick
                                                => 
                                                    _ this._handleShowModal('saveTemplate')
                                            @ className {classes.fabButton}
                                            + Upload template
                                    div 
                                        @ className {css(styles.title)}
                                        + Your Packies
                                    < List 
                                        @ dense {true}
                                        { 
                                            _ packiNames.map
                                                => 
                                                    param name
                                                    param i
                                                    < ListItem 
                                                        @ key {i}
                                                        @ button
                                                        < ListItemText 
                                                            @ primary {name}
                                                            @ onClick
                                                                => 
                                                                    _ onSelectPacki(name)
                                                        < ListItemSecondaryAction 
                                                            < IconButton 
                                                                @ aria-label "Delete"
                                                                @ onClick
                                                                    => 
                                                                        _ onDeletePacki(name)
                                                                < DeleteIcon 
                    < EditorForm 
                        @ title "Create New Packi"
                        @ action "Confirm"
                        @ visible {modalVisible === 'create'}
                        @ onDismiss {this._handleDismissModal}
                        @ onSubmit
                            => 
                                param values
                                _ this._handleCreatePacki(values['name'], values['kind'])
                                    # alert(JSON.stringify(values));
                        @ fields
                            { 
                                { name
                                    @ type 'text'
                                    @ label 'Name'
                                    @ onValidate packiValidations.validatePackiName
                                { kind
                                    @ type 'select'
                                    @ label 'Kind'
                                    @ options
                                        _ packiTemplateNames.map
                                            => 
                                                param name
                                                return 
                                                    { 
                                                        @ label name
                                                        @ value name
                    $if wzCtx.Build.usePackiAspectGithub
                        < EditorForm 
                            @ title "Clone git package"
                            @ action "Confirm"
                            @ visible {modalVisible === 'clone'}
                            @ onDismiss {this._handleDismissModal}
                            @ onSubmit
                                => 
                                    param values
                                        :{ 
                                            :index 
                                                :any 
                                                param k
                                                    :string 
                                    _ this._handleClonePacki(values['id'], values['branch'], values['ittfOnly'])
                                        # alert(JSON.stringify(values));
                            @ fields
                                { 
                                    { id
                                        @ type 'select'
                                        @ label 'Package'
                                        @ options
                                            _ ownedGitRepositories.map
                                                => 
                                                    param item
                                                    return 
                                                        { 
                                                            @ label
                                                                `lit 
                                                                    + 
                                                                    @ item.owner
                                                                    + _
                                                                    @ item.name
                                                                    + 
                                                            @ value
                                                                `lit 
                                                                    + 
                                                                    @ item.owner
                                                                    + _
                                                                    @ item.name
                                                                    + 
                                    { branch
                                        @ type 'select'
                                        @ label 'Branch'
                                        @ options
                                            _ gitBranchesTODO.map
                                                => 
                                                    param name
                                                    return 
                                                        { 
                                                            @ label name
                                                            @ value name
                                    { ittfOnly
                                        @ type 'checkbox'
                                        @ label 'Clone ittf only'
                                        @ default true
                        { 
                            && 
                                + currentPacki
                                < EditorForm 
                                    @ title "Commit/push git package"
                                    @ action "Confirm"
                                    @ visible {modalVisible === 'commit'}
                                    @ onDismiss {this._handleDismissModal}
                                    @ onSubmit
                                        => 
                                            param values
                                                :{ 
                                                    :index 
                                                        :any 
                                                        param k
                                                            :string 
                                            _ this._handleCommitPacki
                                                `lit 
                                                    + 
                                                    @ values['owner']
                                                    + _
                                                    @ values['repoName']
                                                    + 
                                                @expr values['branch']
                                                @expr values['virtualFiles']
                                                # alert(JSON.stringify(values));
                                    @ fields
                                        { 
                                            { owner
                                                @ type 'text'
                                                @ label 'Owner'
                                                @ default currentPacki.localPackiData.owner
                                                @ onValidate packiValidations.validatePackiName
                                            { repoName
                                                @ type 'text'
                                                @ label 'Repo'
                                                @ default currentPacki.localPackiData.repoName
                                                @ onValidate packiValidations.validatePackiName
                                            { branch
                                                @ type 'text'
                                                @ label 'Branch'
                                                @ default currentPacki.localPackiData.branch
                                                @ onValidate packiValidations.validatePackiName
                                            { virtualFiles
                                                @ type 'checkbox'
                                                @ label 'Virtual files'
                                                @ default true
                    { 
                        && 
                            + currentPacki
                            < EditorForm 
                                @ title "Save packi template"
                                @ action "Confirm"
                                @ visible {modalVisible === 'saveTemplate'}
                                @ onDismiss {this._handleDismissModal}
                                @ onSubmit
                                    => 
                                        param values
                                            :{ 
                                                :index 
                                                    :any 
                                                    param k
                                                        :string 
                                        _ this._handleUploadPackiTemplate(values['templateId'], values['virtualFiles'])
                                            # alert(JSON.stringify(values));
                                @ fields
                                    { 
                                        { templateId
                                            @ type 'text'
                                            @ label 'Template id'
                                            @ default '' $$ TODO currentPacki.localPackiData.id
                                            @ onValidate packiValidations.validatePackiName
                                        { virtualFiles
                                            @ type 'checkbox'
                                            @ label 'Virtual files'
                                            @ default true
    const styles
        _ StyleSheet.create
            { 
                { container
                    @ display 'flex'
                    @ flexDirection 'row'
                    @ flexWrap 'nowrap'
                    @ fontFamily 'var(--font-monospace)'
                    @ fontSize 13
                    @ minHeight 16
                    @ margin '4px 0'
                { title
                    @ height 72
                    @ fontSize 24
                    @ width '100%'
                    @ lineHeight '24px'
                    @ display 'flex'
                    @ flexShrink 0
                    @ alignItems 'center'
                    @ justifyContent 'center'
                    @ boxShadow '0 1px 0 rgba(36, 44, 58, 0.1)'
                { buttons
                    @ display 'flex'
                    @ flexDirection 'row'
                    @ alignItems 'center'
                    @ position 'relative'
                    @ zIndex 5
                    @ marginTop '6px'
                    @ borderTop '1px black solid'
                { shortcutList
                    @ fontSize '1.2em'
                    @ tableLayout 'fixed'
                { shortcutCell
                    @ padding '6px 8px'
                    @ color c('primary')
                    @ background 'white'
                    { ':hover'
                        @ background c('primary')
                        @ color 'white'
                { shortcutLabelCell
                    @ textAlign 'right'
                { shortcutDescriptionCell
                    @ textAlign 'left'
                { shortcutLabel
                    @ color 'inherit'
                    @ fontFamily 'inherit'
                    @ fontSize 'inherit'
                    @ backgroundColor 'transparent'
                    @ boxShadow 'none'
                    @ padding 0
                    @ display 'inline-block'
                { saveButton
                    @ minWidth 100
    const muiStyles
        => 
            param theme
                :ref Theme
            _ createStyles
                { 
                    { fabButton
                        @ margin theme.spacing(1)
    const StyledComp = withStyles(muiStyles)(PackiManager)
    export-default withThemeName(StyledComp)

$group
    ---
    ${'$'}if wzCtx.Build.useWebpack
        ${'$'}if wzCtx.Build.webpack.useDevAndProd
            start "webpack serve --mode development --config ./webpack.base.config.js --open --hot --history-api-fallback --env.PLATFORM=local --env.VERSION=stag"
            prebuild "webpack --mode production --config ./webpack.prod.config.js --env.PLATFORM=production --env.VERSION=stag --progress"
            build "node server"
        ${'$'}else
            start "webpack serve --open --mode development"
            build "webpack --mode development"
            build:prod "webpack --mode production"

    ${'$'}if wzCtx.Build.useGatsby
        develop "gatsby develop"
        start "gatsby develop"
        build "gatsby build"
        serve "gatsby serve"
        clean "gatsby clean"
      
    ${'$'}if wzCtx.Build.useExpress
        ${'$'}if wzCtx.Build.useLocalServer
            build "netlify-lambda build ${'$'}{wzCtx.Build.netlify.functionsFolder}"
            start "nodemon server-local.js"
        ${'$'}else wzctx.Build.useExpress
            start "cross-env NODE_ENV=dev npm-run-all --parallel start:app start:server"
            start:app "react-scripts start"
            start:server "netlify-lambda serve functions"
            build "npm-run-all --parallel build:**"
            build:app "react-scripts build"
            build:functions "netlify-lambda build functions"
            test "react-scripts test --env=jsdom"    

    ${'$'}if wzCtx.Build.useLint
        lint "eslint --debug src/"
        lint:write "eslint --debug src/ --fix"
    
    ${'$'}if wzCtx.Build.useTest && wzCtx.Build.test.useJest
        test "jest"
        test:watch "jest --watch"
        test:coverage "jest --coverage --colors"
    
    ${'$'}if wzCtx.Build.usePrettier
        prettier "prettier --write src/**/*.js"

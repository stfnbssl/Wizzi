$group
    $params &md
    $if wzCtx.Build.useConfig
        import path from 'path'
        $if wzCtx.type == 'module'
            import { dirname } from 'path'
            import { fileURLToPath } from 'url'
            const __dirname = dirname(fileURLToPath(import.meta.url))
        $if wzCtx.Build.config.useEnvalid
            import dotenv from 'dotenv'
            import
                @ cleanEnv
                @ str
                @ bool
                @ port
                from 'envalid'
        let config = null
        function validateEnv
            $if wzCtx.Build.config.useEnvalid
                _ dotenv.config
                let checkedEnv
                    _ cleanEnv
                        @ process.env
                        {
                            @ PORT port()
                            @ SESSION_SECRET str()
                            $if wzCtx.Build.useMongoDb
                                @ MONGO_PASSWORD str()
                                @ MONGO_PATH str()
                                @ MONGO_USER str()
                            $if wzCtx.Build.useGithubLogin
                                @ GITHUB_CLIENT_ID str()
                                @ GITHUB_CLIENT_SECRET str()
                                @ GITHUB_CALLBACK_URL str()
                            $if wzCtx.Build.useCors
                                @ CORS_CLIENT_ORIGIN str()
                return checkedEnv
            $else
                return
                    {
                        @ PORT 5000
                        @ SESSION_SECRET "axr45hngmuoil9********0ofgt*kjj6767648%$Â£3f5&/4bnsa-----qq4)$35670qq4q"
                        $if wzCtx.Build.useMongoDb
                            @ MONGO_USER "yanez"
                            @ MONGO_PASSWORD "3zMsma2szSKDefi1"
                            @ MONGO_PATH "@cluster0.idlk7.mongodb.net/wizzi?retryWrites=true&w=majority"
                        $if wzCtx.Build.useAuth && wzCtx.Build.auth.usePassport
                            $if wzCtx.Build.auth.passport.useGithub
                                @ GITHUB_CLIENT_ID "6a42cd4cb7247bb4e823"
                                @ GITHUB_CLIENT_SECRET "dedced0ac262cae62557e4c3f567a6227b17bfb7"
                                @ GITHUB_CALLBACK_URL "http://localhost:5000/auth/github/callback"
                        $if wzCtx.Build.useCors
                            @ CORS_CLIENT_ORIGIN "http://localhost:8080"
        export default
            function create
                if config == null
                    const __ittfPath = path.join(__dirname, '..', '..', '..', '..', 'ittf');
                    const checkedEnv
                        _ validateEnv
                    set config =
                        {
                            @ port checkedEnv.PORT
                            @ sessionSecret checkedEnv.SESSION_SECRET
                            $if wzCtx.Build.useMongoDb
                                @ mongoPath checkedEnv.MONGO_PATH
                                @ mongoUser checkedEnv.MONGO_USER
                                @ mongoPassword checkedEnv.MONGO_PASSWORD
                            $if wzCtx.Build.useAuth && wzCtx.Build.auth.usePassport
                                $if wzCtx.Build.auth.passport.useGithub
                                    @ githubClientID checkedEnv.GITHUB_CLIENT_ID
                                    @ githubClientSecret checkedEnv.GITHUB_CLIENT_SECRET
                                    @ githubCallbackURL checkedEnv.GITHUB_CALLBACK_URL
                            $if wzCtx.Build.useCors
                                @ corsClientOrigin checkedEnv.CORS_CLIENT_ORIGIN
                            @ MetaHtmlIttfPath path.join(__ittfPath, 'meta', 'html', 'index.html.ittf')
                            @ MetaFolderIttfPath path.join(__ittfPath, 'meta', 'folder', 'index.html.ittf')
                            @ MetaHtmlTextPath path.join(__ittfPath, 'meta', 'text', 'index.html.ittf')
                    _ Object.keys(config).forEach
                        =>
                            param element
                            if element.indexOf("Pass") < 0 && element.indexOf("Secr") < 0
                                log 'Created config', element, config[element]
                return config
